//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/internal/bind/TypeAdapters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_TypeAdapters")
#ifdef RESTRICT_TypeAdapters
#define INCLUDE_ALL_TypeAdapters 0
#else
#define INCLUDE_ALL_TypeAdapters 1
#endif
#undef RESTRICT_TypeAdapters

#if !defined (GSONTypeAdapters_) && (INCLUDE_ALL_TypeAdapters || defined(INCLUDE_GSONTypeAdapters))
#define GSONTypeAdapters_

@class GSONTypeAdapter;
@class GSONTypeToken;
@class IOSClass;
@protocol GSONTypeAdapterFactory;

/*!
 @brief Type adapters for basic types.
 */
@interface GSONTypeAdapters : NSObject

#pragma mark Public

+ (id<GSONTypeAdapterFactory>)newFactoryWithIOSClass:(IOSClass *)unboxed
                                        withIOSClass:(IOSClass *)boxed
                                 withGSONTypeAdapter:(GSONTypeAdapter *)typeAdapter OBJC_METHOD_FAMILY_NONE;

+ (id<GSONTypeAdapterFactory>)newFactoryWithIOSClass:(IOSClass *)type
                                 withGSONTypeAdapter:(GSONTypeAdapter *)typeAdapter OBJC_METHOD_FAMILY_NONE;

+ (id<GSONTypeAdapterFactory>)newFactoryWithGSONTypeToken:(GSONTypeToken *)type
                                      withGSONTypeAdapter:(GSONTypeAdapter *)typeAdapter OBJC_METHOD_FAMILY_NONE;

+ (id<GSONTypeAdapterFactory>)newFactoryForMultipleTypesWithIOSClass:(IOSClass *)base
                                                        withIOSClass:(IOSClass *)sub
                                                 withGSONTypeAdapter:(GSONTypeAdapter *)typeAdapter OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Returns a factory for all subtypes of <code>typeAdapter</code>.We do a runtime check to confirm
  that the deserialized type matches the type requested.
 */
+ (id<GSONTypeAdapterFactory>)newTypeHierarchyFactoryWithIOSClass:(IOSClass *)clazz
                                              withGSONTypeAdapter:(GSONTypeAdapter *)typeAdapter OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(GSONTypeAdapters)

inline GSONTypeAdapter *GSONTypeAdapters_get_CLASS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_CLASS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, CLASS, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_CLASS_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_CLASS_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, CLASS_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_BIT_SET();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_BIT_SET;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, BIT_SET, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_BIT_SET_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_BIT_SET_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, BIT_SET_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_BOOLEAN();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_BOOLEAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, BOOLEAN, GSONTypeAdapter *)

/*!
 @brief Writes a boolean as a string.Useful for map keys, where booleans aren't
  otherwise permitted.
 */
inline GSONTypeAdapter *GSONTypeAdapters_get_BOOLEAN_AS_STRING();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_BOOLEAN_AS_STRING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, BOOLEAN_AS_STRING, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_BOOLEAN_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_BOOLEAN_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, BOOLEAN_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_BYTE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_BYTE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, BYTE, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_BYTE_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_BYTE_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, BYTE_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_SHORT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_SHORT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, SHORT, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_SHORT_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_SHORT_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, SHORT_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_INTEGER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_INTEGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, INTEGER, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_INTEGER_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_INTEGER_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, INTEGER_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_ATOMIC_INTEGER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_ATOMIC_INTEGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, ATOMIC_INTEGER, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_ATOMIC_INTEGER_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_ATOMIC_INTEGER_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, ATOMIC_INTEGER_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_ATOMIC_BOOLEAN();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_ATOMIC_BOOLEAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, ATOMIC_BOOLEAN, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_ATOMIC_BOOLEAN_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_ATOMIC_BOOLEAN_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, ATOMIC_BOOLEAN_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_ATOMIC_INTEGER_ARRAY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_ATOMIC_INTEGER_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, ATOMIC_INTEGER_ARRAY, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_ATOMIC_INTEGER_ARRAY_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_ATOMIC_INTEGER_ARRAY_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, ATOMIC_INTEGER_ARRAY_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_LONG();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_LONG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, LONG, GSONTypeAdapter *)

inline GSONTypeAdapter *GSONTypeAdapters_get_FLOAT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_FLOAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, FLOAT, GSONTypeAdapter *)

inline GSONTypeAdapter *GSONTypeAdapters_get_DOUBLE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_DOUBLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, DOUBLE, GSONTypeAdapter *)

inline GSONTypeAdapter *GSONTypeAdapters_get_NUMBER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_NUMBER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, NUMBER, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_NUMBER_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_NUMBER_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, NUMBER_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_CHARACTER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_CHARACTER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, CHARACTER, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_CHARACTER_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_CHARACTER_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, CHARACTER_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_STRING();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_STRING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, STRING, GSONTypeAdapter *)

inline GSONTypeAdapter *GSONTypeAdapters_get_BIG_DECIMAL();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_BIG_DECIMAL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, BIG_DECIMAL, GSONTypeAdapter *)

inline GSONTypeAdapter *GSONTypeAdapters_get_BIG_INTEGER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_BIG_INTEGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, BIG_INTEGER, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_STRING_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_STRING_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, STRING_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_STRING_BUILDER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_STRING_BUILDER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, STRING_BUILDER, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_STRING_BUILDER_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_STRING_BUILDER_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, STRING_BUILDER_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_STRING_BUFFER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_STRING_BUFFER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, STRING_BUFFER, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_STRING_BUFFER_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_STRING_BUFFER_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, STRING_BUFFER_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_URL();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_URL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, URL, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_URL_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_URL_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, URL_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_URI();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_URI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, URI, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_URI_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_URI_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, URI_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_INET_ADDRESS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_INET_ADDRESS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, INET_ADDRESS, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_INET_ADDRESS_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_INET_ADDRESS_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, INET_ADDRESS_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_UUID();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_UUID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, UUID, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_UUID_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_UUID_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, UUID_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_CURRENCY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_CURRENCY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, CURRENCY, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_CURRENCY_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_CURRENCY_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, CURRENCY_FACTORY, id<GSONTypeAdapterFactory>)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_TIMESTAMP_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_TIMESTAMP_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, TIMESTAMP_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_CALENDAR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_CALENDAR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, CALENDAR, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_CALENDAR_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_CALENDAR_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, CALENDAR_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_LOCALE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_LOCALE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, LOCALE, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_LOCALE_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_LOCALE_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, LOCALE_FACTORY, id<GSONTypeAdapterFactory>)

inline GSONTypeAdapter *GSONTypeAdapters_get_JSON_ELEMENT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GSONTypeAdapter *GSONTypeAdapters_JSON_ELEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, JSON_ELEMENT, GSONTypeAdapter *)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_JSON_ELEMENT_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_JSON_ELEMENT_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, JSON_ELEMENT_FACTORY, id<GSONTypeAdapterFactory>)

inline id<GSONTypeAdapterFactory> GSONTypeAdapters_get_ENUM_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_ENUM_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters, ENUM_FACTORY, id<GSONTypeAdapterFactory>)

FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_newFactoryWithGSONTypeToken_withGSONTypeAdapter_(GSONTypeToken *type, GSONTypeAdapter *typeAdapter);

FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(IOSClass *type, GSONTypeAdapter *typeAdapter);

FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGSONTypeAdapter_(IOSClass *unboxed, IOSClass *boxed, GSONTypeAdapter *typeAdapter);

FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_newFactoryForMultipleTypesWithIOSClass_withIOSClass_withGSONTypeAdapter_(IOSClass *base, IOSClass *sub, GSONTypeAdapter *typeAdapter);

FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTypeAdapters_newTypeHierarchyFactoryWithIOSClass_withGSONTypeAdapter_(IOSClass *clazz, GSONTypeAdapter *typeAdapter);

J2OBJC_TYPE_LITERAL_HEADER(GSONTypeAdapters)

@compatibility_alias ComGoogleGsonInternalBindTypeAdapters GSONTypeAdapters;

#endif

#pragma pop_macro("INCLUDE_ALL_TypeAdapters")

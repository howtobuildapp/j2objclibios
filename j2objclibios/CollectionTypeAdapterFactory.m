//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java
//

#include "$Gson$Types.h"
#include "CollectionTypeAdapterFactory.h"
#include "ConstructorConstructor.h"
#include "Gson.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "JsonReader.h"
#include "JsonToken.h"
#include "JsonWriter.h"
#include "ObjectConstructor.h"
#include "TypeAdapter.h"
#include "TypeAdapterRuntimeTypeWrapper.h"
#include "TypeToken.h"
#include "java/lang/reflect/Type.h"
#include "java/util/Collection.h"

@class GSONJsonElement;
@class JavaIoReader;

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface GSONCollectionTypeAdapterFactory () {
 @public
  GSONConstructorConstructor *constructorConstructor_;
}

@end

J2OBJC_FIELD_SETTER(GSONCollectionTypeAdapterFactory, constructorConstructor_, GSONConstructorConstructor *)

@interface GSONCollectionTypeAdapterFactory_Adapter : GSONTypeAdapter {
 @public
  GSONTypeAdapter *elementTypeAdapter_;
  id<GSONObjectConstructor> constructor_;
}

- (instancetype)initWithGSONGson:(GSONGson *)context
         withJavaLangReflectType:(id<JavaLangReflectType>)elementType
             withGSONTypeAdapter:(GSONTypeAdapter *)elementTypeAdapter
       withGSONObjectConstructor:(id<GSONObjectConstructor>)constructor;

- (id<JavaUtilCollection>)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(id<JavaUtilCollection>)collection;

- (id<JavaUtilCollection>)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (id<JavaUtilCollection>)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (id<JavaUtilCollection>)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONCollectionTypeAdapterFactory_Adapter)

J2OBJC_FIELD_SETTER(GSONCollectionTypeAdapterFactory_Adapter, elementTypeAdapter_, GSONTypeAdapter *)
J2OBJC_FIELD_SETTER(GSONCollectionTypeAdapterFactory_Adapter, constructor_, id<GSONObjectConstructor>)

__attribute__((unused)) static void GSONCollectionTypeAdapterFactory_Adapter_initWithGSONGson_withJavaLangReflectType_withGSONTypeAdapter_withGSONObjectConstructor_(GSONCollectionTypeAdapterFactory_Adapter *self, GSONGson *context, id<JavaLangReflectType> elementType, GSONTypeAdapter *elementTypeAdapter, id<GSONObjectConstructor> constructor);

__attribute__((unused)) static GSONCollectionTypeAdapterFactory_Adapter *new_GSONCollectionTypeAdapterFactory_Adapter_initWithGSONGson_withJavaLangReflectType_withGSONTypeAdapter_withGSONObjectConstructor_(GSONGson *context, id<JavaLangReflectType> elementType, GSONTypeAdapter *elementTypeAdapter, id<GSONObjectConstructor> constructor) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONCollectionTypeAdapterFactory_Adapter *create_GSONCollectionTypeAdapterFactory_Adapter_initWithGSONGson_withJavaLangReflectType_withGSONTypeAdapter_withGSONObjectConstructor_(GSONGson *context, id<JavaLangReflectType> elementType, GSONTypeAdapter *elementTypeAdapter, id<GSONObjectConstructor> constructor);

J2OBJC_TYPE_LITERAL_HEADER(GSONCollectionTypeAdapterFactory_Adapter)

@implementation GSONCollectionTypeAdapterFactory

- (instancetype)initWithGSONConstructorConstructor:(GSONConstructorConstructor *)constructorConstructor {
  GSONCollectionTypeAdapterFactory_initWithGSONConstructorConstructor_(self, constructorConstructor);
  return self;
}

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken {
  id<JavaLangReflectType> type = [((GSONTypeToken *) nil_chk(typeToken)) getType];
  IOSClass *rawType = [typeToken getRawType];
  if (![JavaUtilCollection_class_() isAssignableFrom:rawType]) {
    return nil;
  }
  id<JavaLangReflectType> elementType = GSON_Gson_Types_getCollectionElementTypeWithJavaLangReflectType_withIOSClass_(type, rawType);
  GSONTypeAdapter *elementTypeAdapter = [((GSONGson *) nil_chk(gson)) getAdapterWithGSONTypeToken:GSONTypeToken_getWithJavaLangReflectType_(elementType)];
  id<GSONObjectConstructor> constructor = [((GSONConstructorConstructor *) nil_chk(constructorConstructor_)) getWithGSONTypeToken:typeToken];
  GSONTypeAdapter *result = new_GSONCollectionTypeAdapterFactory_Adapter_initWithGSONGson_withJavaLangReflectType_withGSONTypeAdapter_withGSONObjectConstructor_(gson, elementType, elementTypeAdapter, constructor);
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LGSONTypeAdapter;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithGSONConstructorConstructor:);
  methods[1].selector = @selector(createWithGSONGson:withGSONTypeToken:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "constructorConstructor_", "LGSONConstructorConstructor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LGSONConstructorConstructor;", "create", "LGSONGson;LGSONTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "LGSONCollectionTypeAdapterFactory_Adapter;" };
  static const J2ObjcClassInfo _GSONCollectionTypeAdapterFactory = { "CollectionTypeAdapterFactory", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, 4, -1, -1, -1 };
  return &_GSONCollectionTypeAdapterFactory;
}

@end

void GSONCollectionTypeAdapterFactory_initWithGSONConstructorConstructor_(GSONCollectionTypeAdapterFactory *self, GSONConstructorConstructor *constructorConstructor) {
  NSObject_init(self);
  self->constructorConstructor_ = constructorConstructor;
}

GSONCollectionTypeAdapterFactory *new_GSONCollectionTypeAdapterFactory_initWithGSONConstructorConstructor_(GSONConstructorConstructor *constructorConstructor) {
  J2OBJC_NEW_IMPL(GSONCollectionTypeAdapterFactory, initWithGSONConstructorConstructor_, constructorConstructor)
}

GSONCollectionTypeAdapterFactory *create_GSONCollectionTypeAdapterFactory_initWithGSONConstructorConstructor_(GSONConstructorConstructor *constructorConstructor) {
  J2OBJC_CREATE_IMPL(GSONCollectionTypeAdapterFactory, initWithGSONConstructorConstructor_, constructorConstructor)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GSONCollectionTypeAdapterFactory)

@implementation GSONCollectionTypeAdapterFactory_Adapter

- (instancetype)initWithGSONGson:(GSONGson *)context
         withJavaLangReflectType:(id<JavaLangReflectType>)elementType
             withGSONTypeAdapter:(GSONTypeAdapter *)elementTypeAdapter
       withGSONObjectConstructor:(id<GSONObjectConstructor>)constructor {
  GSONCollectionTypeAdapterFactory_Adapter_initWithGSONGson_withJavaLangReflectType_withGSONTypeAdapter_withGSONObjectConstructor_(self, context, elementType, elementTypeAdapter, constructor);
  return self;
}

- (id<JavaUtilCollection>)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  id<JavaUtilCollection> collection = [((id<GSONObjectConstructor>) nil_chk(constructor_)) construct];
  [inArg beginArray];
  while ([inArg hasNext]) {
    id instance = [((GSONTypeAdapter *) nil_chk(elementTypeAdapter_)) readWithGSONJsonReader:inArg];
    [((id<JavaUtilCollection>) nil_chk(collection)) addWithId:instance];
  }
  [inArg endArray];
  return collection;
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(id<JavaUtilCollection>)collection {
  if (collection == nil) {
    (void) [((GSONJsonWriter *) nil_chk(outArg)) nullValue];
    return;
  }
  (void) [((GSONJsonWriter *) nil_chk(outArg)) beginArray];
  for (id __strong element in collection) {
    [((GSONTypeAdapter *) nil_chk(elementTypeAdapter_)) writeWithGSONJsonWriter:outArg withId:element];
  }
  (void) [outArg endArray];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, 2, 3, 4, 5, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 4, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithGSONGson:withJavaLangReflectType:withGSONTypeAdapter:withGSONObjectConstructor:);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "elementTypeAdapter_", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
    { "constructor_", "LGSONObjectConstructor;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LGSONGson;LJavaLangReflectType;LGSONTypeAdapter;LGSONObjectConstructor;", "(Lcom/google/gson/Gson;Ljava/lang/reflect/Type;Lcom/google/gson/TypeAdapter<TE;>;Lcom/google/gson/internal/ObjectConstructor<+Ljava/util/Collection<TE;>;>;)V", "read", "LGSONJsonReader;", "LJavaIoIOException;", "(Lcom/google/gson/stream/JsonReader;)Ljava/util/Collection<TE;>;", "write", "LGSONJsonWriter;LJavaUtilCollection;", "(Lcom/google/gson/stream/JsonWriter;Ljava/util/Collection<TE;>;)V", "Lcom/google/gson/TypeAdapter<TE;>;", "Lcom/google/gson/internal/ObjectConstructor<+Ljava/util/Collection<TE;>;>;", "LGSONCollectionTypeAdapterFactory;", "<E:Ljava/lang/Object;>Lcom/google/gson/TypeAdapter<Ljava/util/Collection<TE;>;>;" };
  static const J2ObjcClassInfo _GSONCollectionTypeAdapterFactory_Adapter = { "Adapter", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x1a, 3, 2, 11, -1, -1, 12, -1 };
  return &_GSONCollectionTypeAdapterFactory_Adapter;
}

@end

void GSONCollectionTypeAdapterFactory_Adapter_initWithGSONGson_withJavaLangReflectType_withGSONTypeAdapter_withGSONObjectConstructor_(GSONCollectionTypeAdapterFactory_Adapter *self, GSONGson *context, id<JavaLangReflectType> elementType, GSONTypeAdapter *elementTypeAdapter, id<GSONObjectConstructor> constructor) {
  GSONTypeAdapter_init(self);
  self->elementTypeAdapter_ = new_GSONTypeAdapterRuntimeTypeWrapper_initWithGSONGson_withGSONTypeAdapter_withJavaLangReflectType_(context, elementTypeAdapter, elementType);
  self->constructor_ = constructor;
}

GSONCollectionTypeAdapterFactory_Adapter *new_GSONCollectionTypeAdapterFactory_Adapter_initWithGSONGson_withJavaLangReflectType_withGSONTypeAdapter_withGSONObjectConstructor_(GSONGson *context, id<JavaLangReflectType> elementType, GSONTypeAdapter *elementTypeAdapter, id<GSONObjectConstructor> constructor) {
  J2OBJC_NEW_IMPL(GSONCollectionTypeAdapterFactory_Adapter, initWithGSONGson_withJavaLangReflectType_withGSONTypeAdapter_withGSONObjectConstructor_, context, elementType, elementTypeAdapter, constructor)
}

GSONCollectionTypeAdapterFactory_Adapter *create_GSONCollectionTypeAdapterFactory_Adapter_initWithGSONGson_withJavaLangReflectType_withGSONTypeAdapter_withGSONObjectConstructor_(GSONGson *context, id<JavaLangReflectType> elementType, GSONTypeAdapter *elementTypeAdapter, id<GSONObjectConstructor> constructor) {
  J2OBJC_CREATE_IMPL(GSONCollectionTypeAdapterFactory_Adapter, initWithGSONGson_withJavaLangReflectType_withGSONTypeAdapter_withGSONObjectConstructor_, context, elementType, elementTypeAdapter, constructor)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GSONCollectionTypeAdapterFactory_Adapter)

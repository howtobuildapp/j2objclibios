//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/internal/bind/SqlDateTypeAdapter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_SqlDateTypeAdapter")
#ifdef RESTRICT_SqlDateTypeAdapter
#define INCLUDE_ALL_SqlDateTypeAdapter 0
#else
#define INCLUDE_ALL_SqlDateTypeAdapter 1
#endif
#undef RESTRICT_SqlDateTypeAdapter

#if !defined (GSONSqlDateTypeAdapter_) && (INCLUDE_ALL_SqlDateTypeAdapter || defined(INCLUDE_GSONSqlDateTypeAdapter))
#define GSONSqlDateTypeAdapter_

#define RESTRICT_TypeAdapter 1
#define INCLUDE_GSONTypeAdapter 1
#include "TypeAdapter.h"

@class GSONJsonElement;
@class GSONJsonReader;
@class GSONJsonWriter;
@class JavaIoReader;
@class JavaSqlDate;
@protocol GSONTypeAdapterFactory;

/*!
 @brief Adapter for java.sql.Date.Although this class appears stateless, it is not.
 DateFormat captures its time zone and locale when it is created, which gives
  this class state. DateFormat isn't thread safe either, so this class has
  to synchronize its read and write methods.
 */
@interface GSONSqlDateTypeAdapter : GSONTypeAdapter

#pragma mark Public

- (instancetype)init;

- (JavaSqlDate *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaSqlDate *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaSqlDate *)fromJsonWithNSString:(NSString *)arg0;

- (JavaSqlDate *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaSqlDate *)value;

@end

J2OBJC_STATIC_INIT(GSONSqlDateTypeAdapter)

inline id<GSONTypeAdapterFactory> GSONSqlDateTypeAdapter_get_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONSqlDateTypeAdapter_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONSqlDateTypeAdapter, FACTORY, id<GSONTypeAdapterFactory>)

FOUNDATION_EXPORT void GSONSqlDateTypeAdapter_init(GSONSqlDateTypeAdapter *self);

FOUNDATION_EXPORT GSONSqlDateTypeAdapter *new_GSONSqlDateTypeAdapter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GSONSqlDateTypeAdapter *create_GSONSqlDateTypeAdapter_init();

J2OBJC_TYPE_LITERAL_HEADER(GSONSqlDateTypeAdapter)

@compatibility_alias ComGoogleGsonInternalBindSqlDateTypeAdapter GSONSqlDateTypeAdapter;

#endif

#pragma pop_macro("INCLUDE_ALL_SqlDateTypeAdapter")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/internal/ConstructorConstructor.java
//

#include "ConstructorConstructor.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "InstanceCreator.h"
#include "J2ObjC_source.h"
#include "JsonIOException.h"
#include "LinkedTreeMap.h"
#include "ObjectConstructor.h"
#include "ReflectionAccessor.h"
#include "TypeToken.h"
#include "UnsafeAllocator.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/util/ArrayDeque.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/EnumSet.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/LinkedHashSet.h"
#include "java/util/Map.h"
#include "java/util/Queue.h"
#include "java/util/Set.h"
#include "java/util/SortedMap.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"
#include "java/util/concurrent/ConcurrentHashMap.h"
#include "java/util/concurrent/ConcurrentMap.h"
#include "java/util/concurrent/ConcurrentNavigableMap.h"
#include "java/util/concurrent/ConcurrentSkipListMap.h"

@interface GSONConstructorConstructor () {
 @public
  id<JavaUtilMap> instanceCreators_;
  GSONReflectionAccessor *accessor_;
}

- (id<GSONObjectConstructor>)newDefaultConstructorWithIOSClass:(IOSClass *)rawType OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Constructors for common interface types like Map and List and their
  subtypes.
 */
- (id<GSONObjectConstructor>)newDefaultImplementationConstructorWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                                                           withIOSClass:(IOSClass *)rawType OBJC_METHOD_FAMILY_NONE;

- (id<GSONObjectConstructor>)newUnsafeAllocatorWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                                          withIOSClass:(IOSClass *)rawType OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(GSONConstructorConstructor, instanceCreators_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(GSONConstructorConstructor, accessor_, GSONReflectionAccessor *)

__attribute__((unused)) static id<GSONObjectConstructor> GSONConstructorConstructor_newDefaultConstructorWithIOSClass_(GSONConstructorConstructor *self, IOSClass *rawType);

__attribute__((unused)) static id<GSONObjectConstructor> GSONConstructorConstructor_newDefaultImplementationConstructorWithJavaLangReflectType_withIOSClass_(GSONConstructorConstructor *self, id<JavaLangReflectType> type, IOSClass *rawType);

__attribute__((unused)) static id<GSONObjectConstructor> GSONConstructorConstructor_newUnsafeAllocatorWithJavaLangReflectType_withIOSClass_(GSONConstructorConstructor *self, id<JavaLangReflectType> type, IOSClass *rawType);

@interface GSONConstructorConstructor_1 : NSObject < GSONObjectConstructor > {
 @public
  id<GSONInstanceCreator> val$typeCreator_;
  id<JavaLangReflectType> val$type_;
}

- (instancetype)initWithGSONInstanceCreator:(id<GSONInstanceCreator>)capture$0
                    withJavaLangReflectType:(id<JavaLangReflectType>)capture$1;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_1)

__attribute__((unused)) static void GSONConstructorConstructor_1_initWithGSONInstanceCreator_withJavaLangReflectType_(GSONConstructorConstructor_1 *self, id<GSONInstanceCreator> capture$0, id<JavaLangReflectType> capture$1);

__attribute__((unused)) static GSONConstructorConstructor_1 *new_GSONConstructorConstructor_1_initWithGSONInstanceCreator_withJavaLangReflectType_(id<GSONInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_1 *create_GSONConstructorConstructor_1_initWithGSONInstanceCreator_withJavaLangReflectType_(id<GSONInstanceCreator> capture$0, id<JavaLangReflectType> capture$1);

@interface GSONConstructorConstructor_2 : NSObject < GSONObjectConstructor > {
 @public
  id<GSONInstanceCreator> val$rawTypeCreator_;
  id<JavaLangReflectType> val$type_;
}

- (instancetype)initWithGSONInstanceCreator:(id<GSONInstanceCreator>)capture$0
                    withJavaLangReflectType:(id<JavaLangReflectType>)capture$1;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_2)

__attribute__((unused)) static void GSONConstructorConstructor_2_initWithGSONInstanceCreator_withJavaLangReflectType_(GSONConstructorConstructor_2 *self, id<GSONInstanceCreator> capture$0, id<JavaLangReflectType> capture$1);

__attribute__((unused)) static GSONConstructorConstructor_2 *new_GSONConstructorConstructor_2_initWithGSONInstanceCreator_withJavaLangReflectType_(id<GSONInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_2 *create_GSONConstructorConstructor_2_initWithGSONInstanceCreator_withJavaLangReflectType_(id<GSONInstanceCreator> capture$0, id<JavaLangReflectType> capture$1);

@interface GSONConstructorConstructor_3 : NSObject < GSONObjectConstructor > {
 @public
  JavaLangReflectConstructor *val$constructor_;
}

- (instancetype)initWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)capture$0;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_3)

__attribute__((unused)) static void GSONConstructorConstructor_3_initWithJavaLangReflectConstructor_(GSONConstructorConstructor_3 *self, JavaLangReflectConstructor *capture$0);

__attribute__((unused)) static GSONConstructorConstructor_3 *new_GSONConstructorConstructor_3_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_3 *create_GSONConstructorConstructor_3_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *capture$0);

@interface GSONConstructorConstructor_4 : NSObject < GSONObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_4)

__attribute__((unused)) static void GSONConstructorConstructor_4_init(GSONConstructorConstructor_4 *self);

__attribute__((unused)) static GSONConstructorConstructor_4 *new_GSONConstructorConstructor_4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_4 *create_GSONConstructorConstructor_4_init();

@interface GSONConstructorConstructor_5 : NSObject < GSONObjectConstructor > {
 @public
  id<JavaLangReflectType> val$type_;
}

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)capture$0;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_5)

__attribute__((unused)) static void GSONConstructorConstructor_5_initWithJavaLangReflectType_(GSONConstructorConstructor_5 *self, id<JavaLangReflectType> capture$0);

__attribute__((unused)) static GSONConstructorConstructor_5 *new_GSONConstructorConstructor_5_initWithJavaLangReflectType_(id<JavaLangReflectType> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_5 *create_GSONConstructorConstructor_5_initWithJavaLangReflectType_(id<JavaLangReflectType> capture$0);

@interface GSONConstructorConstructor_6 : NSObject < GSONObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_6)

__attribute__((unused)) static void GSONConstructorConstructor_6_init(GSONConstructorConstructor_6 *self);

__attribute__((unused)) static GSONConstructorConstructor_6 *new_GSONConstructorConstructor_6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_6 *create_GSONConstructorConstructor_6_init();

@interface GSONConstructorConstructor_7 : NSObject < GSONObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_7)

__attribute__((unused)) static void GSONConstructorConstructor_7_init(GSONConstructorConstructor_7 *self);

__attribute__((unused)) static GSONConstructorConstructor_7 *new_GSONConstructorConstructor_7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_7 *create_GSONConstructorConstructor_7_init();

@interface GSONConstructorConstructor_8 : NSObject < GSONObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_8)

__attribute__((unused)) static void GSONConstructorConstructor_8_init(GSONConstructorConstructor_8 *self);

__attribute__((unused)) static GSONConstructorConstructor_8 *new_GSONConstructorConstructor_8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_8 *create_GSONConstructorConstructor_8_init();

@interface GSONConstructorConstructor_9 : NSObject < GSONObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_9)

__attribute__((unused)) static void GSONConstructorConstructor_9_init(GSONConstructorConstructor_9 *self);

__attribute__((unused)) static GSONConstructorConstructor_9 *new_GSONConstructorConstructor_9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_9 *create_GSONConstructorConstructor_9_init();

@interface GSONConstructorConstructor_10 : NSObject < GSONObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_10)

__attribute__((unused)) static void GSONConstructorConstructor_10_init(GSONConstructorConstructor_10 *self);

__attribute__((unused)) static GSONConstructorConstructor_10 *new_GSONConstructorConstructor_10_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_10 *create_GSONConstructorConstructor_10_init();

@interface GSONConstructorConstructor_11 : NSObject < GSONObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_11)

__attribute__((unused)) static void GSONConstructorConstructor_11_init(GSONConstructorConstructor_11 *self);

__attribute__((unused)) static GSONConstructorConstructor_11 *new_GSONConstructorConstructor_11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_11 *create_GSONConstructorConstructor_11_init();

@interface GSONConstructorConstructor_12 : NSObject < GSONObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_12)

__attribute__((unused)) static void GSONConstructorConstructor_12_init(GSONConstructorConstructor_12 *self);

__attribute__((unused)) static GSONConstructorConstructor_12 *new_GSONConstructorConstructor_12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_12 *create_GSONConstructorConstructor_12_init();

@interface GSONConstructorConstructor_13 : NSObject < GSONObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_13)

__attribute__((unused)) static void GSONConstructorConstructor_13_init(GSONConstructorConstructor_13 *self);

__attribute__((unused)) static GSONConstructorConstructor_13 *new_GSONConstructorConstructor_13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_13 *create_GSONConstructorConstructor_13_init();

@interface GSONConstructorConstructor_14 : NSObject < GSONObjectConstructor > {
 @public
  IOSClass *val$rawType_;
  id<JavaLangReflectType> val$type_;
  GSONUnsafeAllocator *unsafeAllocator_;
}

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
         withJavaLangReflectType:(id<JavaLangReflectType>)capture$1;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONConstructorConstructor_14)

J2OBJC_FIELD_SETTER(GSONConstructorConstructor_14, unsafeAllocator_, GSONUnsafeAllocator *)

__attribute__((unused)) static void GSONConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(GSONConstructorConstructor_14 *self, IOSClass *capture$0, id<JavaLangReflectType> capture$1);

__attribute__((unused)) static GSONConstructorConstructor_14 *new_GSONConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(IOSClass *capture$0, id<JavaLangReflectType> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONConstructorConstructor_14 *create_GSONConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(IOSClass *capture$0, id<JavaLangReflectType> capture$1);

@implementation GSONConstructorConstructor

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)instanceCreators {
  GSONConstructorConstructor_initWithJavaUtilMap_(self, instanceCreators);
  return self;
}

- (id<GSONObjectConstructor>)getWithGSONTypeToken:(GSONTypeToken *)typeToken {
  id<JavaLangReflectType> type = [((GSONTypeToken *) nil_chk(typeToken)) getType];
  IOSClass *rawType = [typeToken getRawType];
  id<GSONInstanceCreator> typeCreator = [((id<JavaUtilMap>) nil_chk(instanceCreators_)) getWithId:type];
  if (typeCreator != nil) {
    return new_GSONConstructorConstructor_1_initWithGSONInstanceCreator_withJavaLangReflectType_(typeCreator, type);
  }
  id<GSONInstanceCreator> rawTypeCreator = [instanceCreators_ getWithId:rawType];
  if (rawTypeCreator != nil) {
    return new_GSONConstructorConstructor_2_initWithGSONInstanceCreator_withJavaLangReflectType_(rawTypeCreator, type);
  }
  id<GSONObjectConstructor> defaultConstructor = GSONConstructorConstructor_newDefaultConstructorWithIOSClass_(self, rawType);
  if (defaultConstructor != nil) {
    return defaultConstructor;
  }
  id<GSONObjectConstructor> defaultImplementation = GSONConstructorConstructor_newDefaultImplementationConstructorWithJavaLangReflectType_withIOSClass_(self, type, rawType);
  if (defaultImplementation != nil) {
    return defaultImplementation;
  }
  return GSONConstructorConstructor_newUnsafeAllocatorWithJavaLangReflectType_withIOSClass_(self, type, rawType);
}

- (id<GSONObjectConstructor>)newDefaultConstructorWithIOSClass:(IOSClass *)rawType {
  return GSONConstructorConstructor_newDefaultConstructorWithIOSClass_(self, rawType);
}

- (id<GSONObjectConstructor>)newDefaultImplementationConstructorWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                                                           withIOSClass:(IOSClass *)rawType {
  return GSONConstructorConstructor_newDefaultImplementationConstructorWithJavaLangReflectType_withIOSClass_(self, type, rawType);
}

- (id<GSONObjectConstructor>)newUnsafeAllocatorWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                                          withIOSClass:(IOSClass *)rawType {
  return GSONConstructorConstructor_newUnsafeAllocatorWithJavaLangReflectType_withIOSClass_(self, type, rawType);
}

- (NSString *)description {
  return [((id<JavaUtilMap>) nil_chk(instanceCreators_)) description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LGSONObjectConstructor;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LGSONObjectConstructor;", 0x2, 5, 6, -1, 7, -1, -1 },
    { NULL, "LGSONObjectConstructor;", 0x2, 8, 9, -1, 10, -1, -1 },
    { NULL, "LGSONObjectConstructor;", 0x2, 11, 9, -1, 10, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilMap:);
  methods[1].selector = @selector(getWithGSONTypeToken:);
  methods[2].selector = @selector(newDefaultConstructorWithIOSClass:);
  methods[3].selector = @selector(newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:);
  methods[4].selector = @selector(newUnsafeAllocatorWithJavaLangReflectType:withIOSClass:);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "instanceCreators_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
    { "accessor_", "LGSONReflectionAccessor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/reflect/Type;Lcom/google/gson/InstanceCreator<*>;>;)V", "get", "LGSONTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/internal/ObjectConstructor<TT;>;", "newDefaultConstructor", "LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<-TT;>;)Lcom/google/gson/internal/ObjectConstructor<TT;>;", "newDefaultImplementationConstructor", "LJavaLangReflectType;LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/reflect/Type;Ljava/lang/Class<-TT;>;)Lcom/google/gson/internal/ObjectConstructor<TT;>;", "newUnsafeAllocator", "toString", "Ljava/util/Map<Ljava/lang/reflect/Type;Lcom/google/gson/InstanceCreator<*>;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor = { "ConstructorConstructor", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x11, 6, 2, -1, -1, -1, -1, -1 };
  return &_GSONConstructorConstructor;
}

@end

void GSONConstructorConstructor_initWithJavaUtilMap_(GSONConstructorConstructor *self, id<JavaUtilMap> instanceCreators) {
  NSObject_init(self);
  self->accessor_ = GSONReflectionAccessor_getInstance();
  self->instanceCreators_ = instanceCreators;
}

GSONConstructorConstructor *new_GSONConstructorConstructor_initWithJavaUtilMap_(id<JavaUtilMap> instanceCreators) {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor, initWithJavaUtilMap_, instanceCreators)
}

GSONConstructorConstructor *create_GSONConstructorConstructor_initWithJavaUtilMap_(id<JavaUtilMap> instanceCreators) {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor, initWithJavaUtilMap_, instanceCreators)
}

id<GSONObjectConstructor> GSONConstructorConstructor_newDefaultConstructorWithIOSClass_(GSONConstructorConstructor *self, IOSClass *rawType) {
  @try {
    JavaLangReflectConstructor *constructor = [((IOSClass *) nil_chk(rawType)) getDeclaredConstructor:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]];
    if (![((JavaLangReflectConstructor *) nil_chk(constructor)) isAccessible]) {
      [((GSONReflectionAccessor *) nil_chk(self->accessor_)) makeAccessibleWithJavaLangReflectAccessibleObject:constructor];
    }
    return new_GSONConstructorConstructor_3_initWithJavaLangReflectConstructor_(constructor);
  }
  @catch (JavaLangNoSuchMethodException *e) {
    return nil;
  }
}

id<GSONObjectConstructor> GSONConstructorConstructor_newDefaultImplementationConstructorWithJavaLangReflectType_withIOSClass_(GSONConstructorConstructor *self, id<JavaLangReflectType> type, IOSClass *rawType) {
  if ([JavaUtilCollection_class_() isAssignableFrom:rawType]) {
    if ([JavaUtilSortedSet_class_() isAssignableFrom:rawType]) {
      return new_GSONConstructorConstructor_4_init();
    }
    else if ([JavaUtilEnumSet_class_() isAssignableFrom:rawType]) {
      return new_GSONConstructorConstructor_5_initWithJavaLangReflectType_(type);
    }
    else if ([JavaUtilSet_class_() isAssignableFrom:rawType]) {
      return new_GSONConstructorConstructor_6_init();
    }
    else if ([JavaUtilQueue_class_() isAssignableFrom:rawType]) {
      return new_GSONConstructorConstructor_7_init();
    }
    else {
      return new_GSONConstructorConstructor_8_init();
    }
  }
  if ([JavaUtilMap_class_() isAssignableFrom:rawType]) {
    if ([JavaUtilConcurrentConcurrentNavigableMap_class_() isAssignableFrom:rawType]) {
      return new_GSONConstructorConstructor_9_init();
    }
    else if ([JavaUtilConcurrentConcurrentMap_class_() isAssignableFrom:rawType]) {
      return new_GSONConstructorConstructor_10_init();
    }
    else if ([JavaUtilSortedMap_class_() isAssignableFrom:rawType]) {
      return new_GSONConstructorConstructor_11_init();
    }
    else if ([JavaLangReflectParameterizedType_class_() isInstance:type] && !([NSString_class_() isAssignableFrom:[((GSONTypeToken *) nil_chk(GSONTypeToken_getWithJavaLangReflectType_(IOSObjectArray_Get(nil_chk([((id<JavaLangReflectParameterizedType>) nil_chk(((id<JavaLangReflectParameterizedType>) cast_check(type, JavaLangReflectParameterizedType_class_())))) getActualTypeArguments]), 0)))) getRawType]])) {
      return new_GSONConstructorConstructor_12_init();
    }
    else {
      return new_GSONConstructorConstructor_13_init();
    }
  }
  return nil;
}

id<GSONObjectConstructor> GSONConstructorConstructor_newUnsafeAllocatorWithJavaLangReflectType_withIOSClass_(GSONConstructorConstructor *self, id<JavaLangReflectType> type, IOSClass *rawType) {
  return new_GSONConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(rawType, type);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GSONConstructorConstructor)

@implementation GSONConstructorConstructor_1

- (instancetype)initWithGSONInstanceCreator:(id<GSONInstanceCreator>)capture$0
                    withJavaLangReflectType:(id<JavaLangReflectType>)capture$1 {
  GSONConstructorConstructor_1_initWithGSONInstanceCreator_withJavaLangReflectType_(self, capture$0, capture$1);
  return self;
}

- (id)construct {
  return [((id<GSONInstanceCreator>) nil_chk(val$typeCreator_)) createInstanceWithJavaLangReflectType:val$type_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithGSONInstanceCreator:withJavaLangReflectType:);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$typeCreator_", "LGSONInstanceCreator;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$type_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()TT;", "Lcom/google/gson/InstanceCreator<TT;>;", "LGSONConstructorConstructor;", "getWithGSONTypeToken:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_1 = { "", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, 4, -1 };
  return &_GSONConstructorConstructor_1;
}

@end

void GSONConstructorConstructor_1_initWithGSONInstanceCreator_withJavaLangReflectType_(GSONConstructorConstructor_1 *self, id<GSONInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) {
  self->val$typeCreator_ = capture$0;
  self->val$type_ = capture$1;
  NSObject_init(self);
}

GSONConstructorConstructor_1 *new_GSONConstructorConstructor_1_initWithGSONInstanceCreator_withJavaLangReflectType_(id<GSONInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_1, initWithGSONInstanceCreator_withJavaLangReflectType_, capture$0, capture$1)
}

GSONConstructorConstructor_1 *create_GSONConstructorConstructor_1_initWithGSONInstanceCreator_withJavaLangReflectType_(id<GSONInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_1, initWithGSONInstanceCreator_withJavaLangReflectType_, capture$0, capture$1)
}

@implementation GSONConstructorConstructor_2

- (instancetype)initWithGSONInstanceCreator:(id<GSONInstanceCreator>)capture$0
                    withJavaLangReflectType:(id<JavaLangReflectType>)capture$1 {
  GSONConstructorConstructor_2_initWithGSONInstanceCreator_withJavaLangReflectType_(self, capture$0, capture$1);
  return self;
}

- (id)construct {
  return [((id<GSONInstanceCreator>) nil_chk(val$rawTypeCreator_)) createInstanceWithJavaLangReflectType:val$type_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithGSONInstanceCreator:withJavaLangReflectType:);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$rawTypeCreator_", "LGSONInstanceCreator;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$type_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()TT;", "Lcom/google/gson/InstanceCreator<TT;>;", "LGSONConstructorConstructor;", "getWithGSONTypeToken:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_2 = { "", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, 4, -1 };
  return &_GSONConstructorConstructor_2;
}

@end

void GSONConstructorConstructor_2_initWithGSONInstanceCreator_withJavaLangReflectType_(GSONConstructorConstructor_2 *self, id<GSONInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) {
  self->val$rawTypeCreator_ = capture$0;
  self->val$type_ = capture$1;
  NSObject_init(self);
}

GSONConstructorConstructor_2 *new_GSONConstructorConstructor_2_initWithGSONInstanceCreator_withJavaLangReflectType_(id<GSONInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_2, initWithGSONInstanceCreator_withJavaLangReflectType_, capture$0, capture$1)
}

GSONConstructorConstructor_2 *create_GSONConstructorConstructor_2_initWithGSONInstanceCreator_withJavaLangReflectType_(id<GSONInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_2, initWithGSONInstanceCreator_withJavaLangReflectType_, capture$0, capture$1)
}

@implementation GSONConstructorConstructor_3

- (instancetype)initWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)capture$0 {
  GSONConstructorConstructor_3_initWithJavaLangReflectConstructor_(self, capture$0);
  return self;
}

- (id)construct {
  @try {
    IOSObjectArray *args = nil;
    return [((JavaLangReflectConstructor *) nil_chk(val$constructor_)) newInstanceWithNSObjectArray:args];
  }
  @catch (JavaLangInstantiationException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@$", @"Failed to invoke ", val$constructor_, @" with no args"), e);
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@$", @"Failed to invoke ", val$constructor_, @" with no args"), [e getTargetException]);
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw new_JavaLangAssertionError_initWithId_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectConstructor:);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$constructor_", "LJavaLangReflectConstructor;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()TT;", "Ljava/lang/reflect/Constructor<-TT;>;", "LGSONConstructorConstructor;", "newDefaultConstructorWithIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_3 = { "", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, 4, -1 };
  return &_GSONConstructorConstructor_3;
}

@end

void GSONConstructorConstructor_3_initWithJavaLangReflectConstructor_(GSONConstructorConstructor_3 *self, JavaLangReflectConstructor *capture$0) {
  self->val$constructor_ = capture$0;
  NSObject_init(self);
}

GSONConstructorConstructor_3 *new_GSONConstructorConstructor_3_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *capture$0) {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_3, initWithJavaLangReflectConstructor_, capture$0)
}

GSONConstructorConstructor_3 *create_GSONConstructorConstructor_3_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *capture$0) {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_3, initWithJavaLangReflectConstructor_, capture$0)
}

@implementation GSONConstructorConstructor_4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONConstructorConstructor_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilTreeSet_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGSONConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_4 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GSONConstructorConstructor_4;
}

@end

void GSONConstructorConstructor_4_init(GSONConstructorConstructor_4 *self) {
  NSObject_init(self);
}

GSONConstructorConstructor_4 *new_GSONConstructorConstructor_4_init() {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_4, init)
}

GSONConstructorConstructor_4 *create_GSONConstructorConstructor_4_init() {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_4, init)
}

@implementation GSONConstructorConstructor_5

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)capture$0 {
  GSONConstructorConstructor_5_initWithJavaLangReflectType_(self, capture$0);
  return self;
}

- (id)construct {
  if ([JavaLangReflectParameterizedType_class_() isInstance:val$type_]) {
    id<JavaLangReflectType> elementType = IOSObjectArray_Get(nil_chk([((id<JavaLangReflectParameterizedType>) nil_chk(((id<JavaLangReflectParameterizedType>) cast_check(val$type_, JavaLangReflectParameterizedType_class_())))) getActualTypeArguments]), 0);
    if ([elementType isKindOfClass:[IOSClass class]]) {
      return JavaUtilEnumSet_noneOfWithIOSClass_((IOSClass *) cast_chk(elementType, [IOSClass class]));
    }
    else {
      @throw new_GSONJsonIOException_initWithNSString_(JreStrcat("$$", @"Invalid EnumSet type: ", [((id<JavaLangReflectType>) nil_chk(val$type_)) description]));
    }
  }
  else {
    @throw new_GSONJsonIOException_initWithNSString_(JreStrcat("$$", @"Invalid EnumSet type: ", [((id<JavaLangReflectType>) nil_chk(val$type_)) description]));
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectType:);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$type_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()TT;", "LGSONConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_5 = { "", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, 3, -1 };
  return &_GSONConstructorConstructor_5;
}

@end

void GSONConstructorConstructor_5_initWithJavaLangReflectType_(GSONConstructorConstructor_5 *self, id<JavaLangReflectType> capture$0) {
  self->val$type_ = capture$0;
  NSObject_init(self);
}

GSONConstructorConstructor_5 *new_GSONConstructorConstructor_5_initWithJavaLangReflectType_(id<JavaLangReflectType> capture$0) {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_5, initWithJavaLangReflectType_, capture$0)
}

GSONConstructorConstructor_5 *create_GSONConstructorConstructor_5_initWithJavaLangReflectType_(id<JavaLangReflectType> capture$0) {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_5, initWithJavaLangReflectType_, capture$0)
}

@implementation GSONConstructorConstructor_6

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONConstructorConstructor_6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilLinkedHashSet_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGSONConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_6 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GSONConstructorConstructor_6;
}

@end

void GSONConstructorConstructor_6_init(GSONConstructorConstructor_6 *self) {
  NSObject_init(self);
}

GSONConstructorConstructor_6 *new_GSONConstructorConstructor_6_init() {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_6, init)
}

GSONConstructorConstructor_6 *create_GSONConstructorConstructor_6_init() {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_6, init)
}

@implementation GSONConstructorConstructor_7

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONConstructorConstructor_7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilArrayDeque_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGSONConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_7 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GSONConstructorConstructor_7;
}

@end

void GSONConstructorConstructor_7_init(GSONConstructorConstructor_7 *self) {
  NSObject_init(self);
}

GSONConstructorConstructor_7 *new_GSONConstructorConstructor_7_init() {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_7, init)
}

GSONConstructorConstructor_7 *create_GSONConstructorConstructor_7_init() {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_7, init)
}

@implementation GSONConstructorConstructor_8

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONConstructorConstructor_8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilArrayList_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGSONConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_8 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GSONConstructorConstructor_8;
}

@end

void GSONConstructorConstructor_8_init(GSONConstructorConstructor_8 *self) {
  NSObject_init(self);
}

GSONConstructorConstructor_8 *new_GSONConstructorConstructor_8_init() {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_8, init)
}

GSONConstructorConstructor_8 *create_GSONConstructorConstructor_8_init() {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_8, init)
}

@implementation GSONConstructorConstructor_9

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONConstructorConstructor_9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilConcurrentConcurrentSkipListMap_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGSONConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_9 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GSONConstructorConstructor_9;
}

@end

void GSONConstructorConstructor_9_init(GSONConstructorConstructor_9 *self) {
  NSObject_init(self);
}

GSONConstructorConstructor_9 *new_GSONConstructorConstructor_9_init() {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_9, init)
}

GSONConstructorConstructor_9 *create_GSONConstructorConstructor_9_init() {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_9, init)
}

@implementation GSONConstructorConstructor_10

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONConstructorConstructor_10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilConcurrentConcurrentHashMap_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGSONConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_10 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GSONConstructorConstructor_10;
}

@end

void GSONConstructorConstructor_10_init(GSONConstructorConstructor_10 *self) {
  NSObject_init(self);
}

GSONConstructorConstructor_10 *new_GSONConstructorConstructor_10_init() {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_10, init)
}

GSONConstructorConstructor_10 *create_GSONConstructorConstructor_10_init() {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_10, init)
}

@implementation GSONConstructorConstructor_11

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONConstructorConstructor_11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilTreeMap_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGSONConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_11 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GSONConstructorConstructor_11;
}

@end

void GSONConstructorConstructor_11_init(GSONConstructorConstructor_11 *self) {
  NSObject_init(self);
}

GSONConstructorConstructor_11 *new_GSONConstructorConstructor_11_init() {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_11, init)
}

GSONConstructorConstructor_11 *create_GSONConstructorConstructor_11_init() {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_11, init)
}

@implementation GSONConstructorConstructor_12

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONConstructorConstructor_12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilLinkedHashMap_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGSONConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_12 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GSONConstructorConstructor_12;
}

@end

void GSONConstructorConstructor_12_init(GSONConstructorConstructor_12 *self) {
  NSObject_init(self);
}

GSONConstructorConstructor_12 *new_GSONConstructorConstructor_12_init() {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_12, init)
}

GSONConstructorConstructor_12 *create_GSONConstructorConstructor_12_init() {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_12, init)
}

@implementation GSONConstructorConstructor_13

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONConstructorConstructor_13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_GSONLinkedTreeMap_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGSONConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_13 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GSONConstructorConstructor_13;
}

@end

void GSONConstructorConstructor_13_init(GSONConstructorConstructor_13 *self) {
  NSObject_init(self);
}

GSONConstructorConstructor_13 *new_GSONConstructorConstructor_13_init() {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_13, init)
}

GSONConstructorConstructor_13 *create_GSONConstructorConstructor_13_init() {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_13, init)
}

@implementation GSONConstructorConstructor_14

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
         withJavaLangReflectType:(id<JavaLangReflectType>)capture$1 {
  GSONConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(self, capture$0, capture$1);
  return self;
}

- (id)construct {
  @try {
    id newInstance = [((GSONUnsafeAllocator *) nil_chk(unsafeAllocator_)) newInstanceWithIOSClass:val$rawType_];
    return newInstance;
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_((JreStrcat("$@$", @"Unable to invoke no-args constructor for ", val$type_, @". Registering an InstanceCreator with Gson for this type may fix this problem.")), e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:withJavaLangReflectType:);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$rawType_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$type_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "unsafeAllocator_", "LGSONUnsafeAllocator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()TT;", "Ljava/lang/Class<-TT;>;", "LGSONConstructorConstructor;", "newUnsafeAllocatorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GSONConstructorConstructor_14 = { "", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x8018, 2, 3, 2, -1, 3, 4, -1 };
  return &_GSONConstructorConstructor_14;
}

@end

void GSONConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(GSONConstructorConstructor_14 *self, IOSClass *capture$0, id<JavaLangReflectType> capture$1) {
  self->val$rawType_ = capture$0;
  self->val$type_ = capture$1;
  NSObject_init(self);
  self->unsafeAllocator_ = GSONUnsafeAllocator_create();
}

GSONConstructorConstructor_14 *new_GSONConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(IOSClass *capture$0, id<JavaLangReflectType> capture$1) {
  J2OBJC_NEW_IMPL(GSONConstructorConstructor_14, initWithIOSClass_withJavaLangReflectType_, capture$0, capture$1)
}

GSONConstructorConstructor_14 *create_GSONConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(IOSClass *capture$0, id<JavaLangReflectType> capture$1) {
  J2OBJC_CREATE_IMPL(GSONConstructorConstructor_14, initWithIOSClass_withJavaLangReflectType_, capture$0, capture$1)
}

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/JsonSyntaxException.java
//

#include "J2ObjC_source.h"
#include "JsonParseException.h"
#include "JsonSyntaxException.h"
#include "java/lang/Throwable.h"

inline jlong GSONJsonSyntaxException_get_serialVersionUID();
#define GSONJsonSyntaxException_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(GSONJsonSyntaxException, serialVersionUID, jlong)

@implementation GSONJsonSyntaxException

- (instancetype)initWithNSString:(NSString *)msg {
  GSONJsonSyntaxException_initWithNSString_(self, msg);
  return self;
}

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  GSONJsonSyntaxException_initWithNSString_withJavaLangThrowable_(self, msg, cause);
  return self;
}

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause {
  GSONJsonSyntaxException_initWithJavaLangThrowable_(self, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[2].selector = @selector(initWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = GSONJsonSyntaxException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;LJavaLangThrowable;", "LJavaLangThrowable;" };
  static const J2ObjcClassInfo _GSONJsonSyntaxException = { "JsonSyntaxException", "com.google.gson", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, -1, -1 };
  return &_GSONJsonSyntaxException;
}

@end

void GSONJsonSyntaxException_initWithNSString_(GSONJsonSyntaxException *self, NSString *msg) {
  GSONJsonParseException_initWithNSString_(self, msg);
}

GSONJsonSyntaxException *new_GSONJsonSyntaxException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(GSONJsonSyntaxException, initWithNSString_, msg)
}

GSONJsonSyntaxException *create_GSONJsonSyntaxException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(GSONJsonSyntaxException, initWithNSString_, msg)
}

void GSONJsonSyntaxException_initWithNSString_withJavaLangThrowable_(GSONJsonSyntaxException *self, NSString *msg, JavaLangThrowable *cause) {
  GSONJsonParseException_initWithNSString_withJavaLangThrowable_(self, msg, cause);
}

GSONJsonSyntaxException *new_GSONJsonSyntaxException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(GSONJsonSyntaxException, initWithNSString_withJavaLangThrowable_, msg, cause)
}

GSONJsonSyntaxException *create_GSONJsonSyntaxException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(GSONJsonSyntaxException, initWithNSString_withJavaLangThrowable_, msg, cause)
}

void GSONJsonSyntaxException_initWithJavaLangThrowable_(GSONJsonSyntaxException *self, JavaLangThrowable *cause) {
  GSONJsonParseException_initWithJavaLangThrowable_(self, cause);
}

GSONJsonSyntaxException *new_GSONJsonSyntaxException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(GSONJsonSyntaxException, initWithJavaLangThrowable_, cause)
}

GSONJsonSyntaxException *create_GSONJsonSyntaxException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(GSONJsonSyntaxException, initWithJavaLangThrowable_, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GSONJsonSyntaxException)

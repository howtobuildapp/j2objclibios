//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/stream/JsonToken.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "JsonToken.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

__attribute__((unused)) static void GSONJsonToken_initWithNSString_withInt_(GSONJsonToken *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GSONJsonToken *new_GSONJsonToken_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(GSONJsonToken)

GSONJsonToken *GSONJsonToken_values_[10];

@implementation GSONJsonToken

+ (IOSObjectArray *)values {
  return GSONJsonToken_values();
}

+ (GSONJsonToken *)valueOfWithNSString:(NSString *)name {
  return GSONJsonToken_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LGSONJsonToken;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGSONJsonToken;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BEGIN_ARRAY", "LGSONJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "END_ARRAY", "LGSONJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "BEGIN_OBJECT", "LGSONJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "END_OBJECT", "LGSONJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "NAME", "LGSONJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "STRING", "LGSONJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "NUMBER", "LGSONJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "BOOLEAN", "LGSONJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "NULL", "LGSONJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "END_DOCUMENT", "LGSONJsonToken;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(GSONJsonToken, BEGIN_ARRAY), &JreEnum(GSONJsonToken, END_ARRAY), &JreEnum(GSONJsonToken, BEGIN_OBJECT), &JreEnum(GSONJsonToken, END_OBJECT), &JreEnum(GSONJsonToken, NAME), &JreEnum(GSONJsonToken, STRING), &JreEnum(GSONJsonToken, NUMBER), &JreEnum(GSONJsonToken, BOOLEAN), &JreEnum(GSONJsonToken, NULL), &JreEnum(GSONJsonToken, END_DOCUMENT), "Ljava/lang/Enum<Lcom/google/gson/stream/JsonToken;>;" };
  static const J2ObjcClassInfo _GSONJsonToken = { "JsonToken", "com.google.gson.stream", ptrTable, methods, fields, 7, 0x4011, 2, 10, -1, -1, -1, 12, -1 };
  return &_GSONJsonToken;
}

+ (void)initialize {
  if (self == [GSONJsonToken class]) {
    JreEnum(GSONJsonToken, BEGIN_ARRAY) = new_GSONJsonToken_initWithNSString_withInt_(@"", 0);
    JreEnum(GSONJsonToken, END_ARRAY) = new_GSONJsonToken_initWithNSString_withInt_(@"", 1);
    JreEnum(GSONJsonToken, BEGIN_OBJECT) = new_GSONJsonToken_initWithNSString_withInt_(@"", 2);
    JreEnum(GSONJsonToken, END_OBJECT) = new_GSONJsonToken_initWithNSString_withInt_(@"", 3);
    JreEnum(GSONJsonToken, NAME) = new_GSONJsonToken_initWithNSString_withInt_(@"", 4);
    JreEnum(GSONJsonToken, STRING) = new_GSONJsonToken_initWithNSString_withInt_(@"", 5);
    JreEnum(GSONJsonToken, NUMBER) = new_GSONJsonToken_initWithNSString_withInt_(@"", 6);
    JreEnum(GSONJsonToken, BOOLEAN) = new_GSONJsonToken_initWithNSString_withInt_(@"", 7);
    JreEnum(GSONJsonToken, NULL) = new_GSONJsonToken_initWithNSString_withInt_(@"", 8);
    JreEnum(GSONJsonToken, END_DOCUMENT) = new_GSONJsonToken_initWithNSString_withInt_(@"", 9);
    J2OBJC_SET_INITIALIZED(GSONJsonToken)
  }
}

@end

void GSONJsonToken_initWithNSString_withInt_(GSONJsonToken *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GSONJsonToken *new_GSONJsonToken_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(GSONJsonToken, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *GSONJsonToken_values() {
  GSONJsonToken_initialize();
  return [IOSObjectArray arrayWithObjects:GSONJsonToken_values_ count:10 type:GSONJsonToken_class_()];
}

GSONJsonToken *GSONJsonToken_valueOfWithNSString_(NSString *name) {
  GSONJsonToken_initialize();
  for (int i = 0; i < 10; i++) {
    GSONJsonToken *e = GSONJsonToken_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

GSONJsonToken *GSONJsonToken_fromOrdinal(NSUInteger ordinal) {
  GSONJsonToken_initialize();
  if (ordinal >= 10) {
    return nil;
  }
  return GSONJsonToken_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GSONJsonToken)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/internal/UnsafeAllocator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_UnsafeAllocator")
#ifdef RESTRICT_UnsafeAllocator
#define INCLUDE_ALL_UnsafeAllocator 0
#else
#define INCLUDE_ALL_UnsafeAllocator 1
#endif
#undef RESTRICT_UnsafeAllocator

#if !defined (GSONUnsafeAllocator_) && (INCLUDE_ALL_UnsafeAllocator || defined(INCLUDE_GSONUnsafeAllocator))
#define GSONUnsafeAllocator_

@class IOSClass;

/*!
 @brief Do sneaky things to allocate objects without invoking their constructors.
 @author Joel Leitch
 @author Jesse Wilson
 */
@interface GSONUnsafeAllocator : NSObject

#pragma mark Public

- (instancetype)init;

+ (GSONUnsafeAllocator *)create;

- (id)newInstanceWithIOSClass:(IOSClass *)c OBJC_METHOD_FAMILY_NONE;

#pragma mark Package-Private

/*!
 @brief Check if the class can be instantiated by unsafe allocator.If the instance has interface or abstract modifiers
  throw an <code>java.lang.UnsupportedOperationException</code>
 @param c instance of the class to be checked
 */
+ (void)assertInstantiableWithIOSClass:(IOSClass *)c;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONUnsafeAllocator)

FOUNDATION_EXPORT void GSONUnsafeAllocator_init(GSONUnsafeAllocator *self);

FOUNDATION_EXPORT GSONUnsafeAllocator *GSONUnsafeAllocator_create();

FOUNDATION_EXPORT void GSONUnsafeAllocator_assertInstantiableWithIOSClass_(IOSClass *c);

J2OBJC_TYPE_LITERAL_HEADER(GSONUnsafeAllocator)

@compatibility_alias ComGoogleGsonInternalUnsafeAllocator GSONUnsafeAllocator;

#endif

#pragma pop_macro("INCLUDE_ALL_UnsafeAllocator")

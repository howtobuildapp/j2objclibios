//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/internal/reflect/PreJava9ReflectionAccessor.java
//

#include "J2ObjC_source.h"
#include "PreJava9ReflectionAccessor.h"
#include "ReflectionAccessor.h"
#include "java/lang/reflect/AccessibleObject.h"

@implementation GSONPreJava9ReflectionAccessor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONPreJava9ReflectionAccessor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)makeAccessibleWithJavaLangReflectAccessibleObject:(JavaLangReflectAccessibleObject *)ao {
  [((JavaLangReflectAccessibleObject *) nil_chk(ao)) setAccessibleWithBoolean:true];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(makeAccessibleWithJavaLangReflectAccessibleObject:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "makeAccessible", "LJavaLangReflectAccessibleObject;" };
  static const J2ObjcClassInfo _GSONPreJava9ReflectionAccessor = { "PreJava9ReflectionAccessor", "com.google.gson.internal.reflect", ptrTable, methods, NULL, 7, 0x10, 2, 0, -1, -1, -1, -1, -1 };
  return &_GSONPreJava9ReflectionAccessor;
}

@end

void GSONPreJava9ReflectionAccessor_init(GSONPreJava9ReflectionAccessor *self) {
  GSONReflectionAccessor_init(self);
}

GSONPreJava9ReflectionAccessor *new_GSONPreJava9ReflectionAccessor_init() {
  J2OBJC_NEW_IMPL(GSONPreJava9ReflectionAccessor, init)
}

GSONPreJava9ReflectionAccessor *create_GSONPreJava9ReflectionAccessor_init() {
  J2OBJC_CREATE_IMPL(GSONPreJava9ReflectionAccessor, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GSONPreJava9ReflectionAccessor)

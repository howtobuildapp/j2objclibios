//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/internal/bind/TypeAdapters.java
//

#include "Gson.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "JsonArray.h"
#include "JsonElement.h"
#include "JsonIOException.h"
#include "JsonNull.h"
#include "JsonObject.h"
#include "JsonPrimitive.h"
#include "JsonReader.h"
#include "JsonSyntaxException.h"
#include "JsonToken.h"
#include "JsonWriter.h"
#include "LazilyParsedNumber.h"
#include "SerializedName.h"
#include "TypeAdapter.h"
#include "TypeAdapterFactory.h"
#include "TypeAdapters.h"
#include "TypeToken.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/reflect/Field.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/net/InetAddress.h"
#include "java/net/URI.h"
#include "java/net/URISyntaxException.h"
#include "java/net/URL.h"
#include "java/sql/Timestamp.h"
#include "java/util/ArrayList.h"
#include "java/util/BitSet.h"
#include "java/util/Calendar.h"
#include "java/util/Currency.h"
#include "java/util/Date.h"
#include "java/util/GregorianCalendar.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/StringTokenizer.h"
#include "java/util/UUID.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicIntegerArray.h"

@class JavaIoReader;

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface GSONTypeAdapters ()

- (instancetype)init;

@end

__attribute__((unused)) static void GSONTypeAdapters_init(GSONTypeAdapters *self);

__attribute__((unused)) static GSONTypeAdapters *new_GSONTypeAdapters_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters *create_GSONTypeAdapters_init();

@interface GSONTypeAdapters_1 : GSONTypeAdapter

- (instancetype)init;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(IOSClass *)value;

- (IOSClass *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (IOSClass *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (IOSClass *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (IOSClass *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_1)

__attribute__((unused)) static void GSONTypeAdapters_1_init(GSONTypeAdapters_1 *self);

__attribute__((unused)) static GSONTypeAdapters_1 *new_GSONTypeAdapters_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_1 *create_GSONTypeAdapters_1_init();

@interface GSONTypeAdapters_2 : GSONTypeAdapter

- (instancetype)init;

- (JavaUtilBitSet *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilBitSet *)src;

- (JavaUtilBitSet *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilBitSet *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaUtilBitSet *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_2)

__attribute__((unused)) static void GSONTypeAdapters_2_init(GSONTypeAdapters_2 *self);

__attribute__((unused)) static GSONTypeAdapters_2 *new_GSONTypeAdapters_2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_2 *create_GSONTypeAdapters_2_init();

@interface GSONTypeAdapters_3 : GSONTypeAdapter

- (instancetype)init;

- (JavaLangBoolean *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaLangBoolean *)value;

- (JavaLangBoolean *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangBoolean *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaLangBoolean *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_3)

__attribute__((unused)) static void GSONTypeAdapters_3_init(GSONTypeAdapters_3 *self);

__attribute__((unused)) static GSONTypeAdapters_3 *new_GSONTypeAdapters_3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_3 *create_GSONTypeAdapters_3_init();

@interface GSONTypeAdapters_4 : GSONTypeAdapter

- (instancetype)init;

- (JavaLangBoolean *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaLangBoolean *)value;

- (JavaLangBoolean *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangBoolean *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaLangBoolean *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_4)

__attribute__((unused)) static void GSONTypeAdapters_4_init(GSONTypeAdapters_4 *self);

__attribute__((unused)) static GSONTypeAdapters_4 *new_GSONTypeAdapters_4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_4 *create_GSONTypeAdapters_4_init();

@interface GSONTypeAdapters_5 : GSONTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_5)

__attribute__((unused)) static void GSONTypeAdapters_5_init(GSONTypeAdapters_5 *self);

__attribute__((unused)) static GSONTypeAdapters_5 *new_GSONTypeAdapters_5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_5 *create_GSONTypeAdapters_5_init();

@interface GSONTypeAdapters_6 : GSONTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_6)

__attribute__((unused)) static void GSONTypeAdapters_6_init(GSONTypeAdapters_6 *self);

__attribute__((unused)) static GSONTypeAdapters_6 *new_GSONTypeAdapters_6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_6 *create_GSONTypeAdapters_6_init();

@interface GSONTypeAdapters_7 : GSONTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_7)

__attribute__((unused)) static void GSONTypeAdapters_7_init(GSONTypeAdapters_7 *self);

__attribute__((unused)) static GSONTypeAdapters_7 *new_GSONTypeAdapters_7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_7 *create_GSONTypeAdapters_7_init();

@interface GSONTypeAdapters_8 : GSONTypeAdapter

- (instancetype)init;

- (JavaUtilConcurrentAtomicAtomicInteger *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilConcurrentAtomicAtomicInteger *)value;

- (JavaUtilConcurrentAtomicAtomicInteger *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilConcurrentAtomicAtomicInteger *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaUtilConcurrentAtomicAtomicInteger *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_8)

__attribute__((unused)) static void GSONTypeAdapters_8_init(GSONTypeAdapters_8 *self);

__attribute__((unused)) static GSONTypeAdapters_8 *new_GSONTypeAdapters_8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_8 *create_GSONTypeAdapters_8_init();

@interface GSONTypeAdapters_9 : GSONTypeAdapter

- (instancetype)init;

- (JavaUtilConcurrentAtomicAtomicBoolean *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilConcurrentAtomicAtomicBoolean *)value;

- (JavaUtilConcurrentAtomicAtomicBoolean *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilConcurrentAtomicAtomicBoolean *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaUtilConcurrentAtomicAtomicBoolean *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_9)

__attribute__((unused)) static void GSONTypeAdapters_9_init(GSONTypeAdapters_9 *self);

__attribute__((unused)) static GSONTypeAdapters_9 *new_GSONTypeAdapters_9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_9 *create_GSONTypeAdapters_9_init();

@interface GSONTypeAdapters_10 : GSONTypeAdapter

- (instancetype)init;

- (JavaUtilConcurrentAtomicAtomicIntegerArray *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilConcurrentAtomicAtomicIntegerArray *)value;

- (JavaUtilConcurrentAtomicAtomicIntegerArray *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilConcurrentAtomicAtomicIntegerArray *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaUtilConcurrentAtomicAtomicIntegerArray *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_10)

__attribute__((unused)) static void GSONTypeAdapters_10_init(GSONTypeAdapters_10 *self);

__attribute__((unused)) static GSONTypeAdapters_10 *new_GSONTypeAdapters_10_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_10 *create_GSONTypeAdapters_10_init();

@interface GSONTypeAdapters_11 : GSONTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_11)

__attribute__((unused)) static void GSONTypeAdapters_11_init(GSONTypeAdapters_11 *self);

__attribute__((unused)) static GSONTypeAdapters_11 *new_GSONTypeAdapters_11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_11 *create_GSONTypeAdapters_11_init();

@interface GSONTypeAdapters_12 : GSONTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_12)

__attribute__((unused)) static void GSONTypeAdapters_12_init(GSONTypeAdapters_12 *self);

__attribute__((unused)) static GSONTypeAdapters_12 *new_GSONTypeAdapters_12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_12 *create_GSONTypeAdapters_12_init();

@interface GSONTypeAdapters_13 : GSONTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_13)

__attribute__((unused)) static void GSONTypeAdapters_13_init(GSONTypeAdapters_13 *self);

__attribute__((unused)) static GSONTypeAdapters_13 *new_GSONTypeAdapters_13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_13 *create_GSONTypeAdapters_13_init();

@interface GSONTypeAdapters_14 : GSONTypeAdapter

- (instancetype)init;

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_14)

__attribute__((unused)) static void GSONTypeAdapters_14_init(GSONTypeAdapters_14 *self);

__attribute__((unused)) static GSONTypeAdapters_14 *new_GSONTypeAdapters_14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_14 *create_GSONTypeAdapters_14_init();

@interface GSONTypeAdapters_15 : GSONTypeAdapter

- (instancetype)init;

- (JavaLangCharacter *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaLangCharacter *)value;

- (JavaLangCharacter *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangCharacter *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaLangCharacter *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_15)

__attribute__((unused)) static void GSONTypeAdapters_15_init(GSONTypeAdapters_15 *self);

__attribute__((unused)) static GSONTypeAdapters_15 *new_GSONTypeAdapters_15_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_15 *create_GSONTypeAdapters_15_init();

@interface GSONTypeAdapters_16 : GSONTypeAdapter

- (instancetype)init;

- (NSString *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSString *)value;

- (NSString *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSString *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (NSString *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_16)

__attribute__((unused)) static void GSONTypeAdapters_16_init(GSONTypeAdapters_16 *self);

__attribute__((unused)) static GSONTypeAdapters_16 *new_GSONTypeAdapters_16_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_16 *create_GSONTypeAdapters_16_init();

@interface GSONTypeAdapters_17 : GSONTypeAdapter

- (instancetype)init;

- (JavaMathBigDecimal *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaMathBigDecimal *)value;

- (JavaMathBigDecimal *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaMathBigDecimal *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaMathBigDecimal *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_17)

__attribute__((unused)) static void GSONTypeAdapters_17_init(GSONTypeAdapters_17 *self);

__attribute__((unused)) static GSONTypeAdapters_17 *new_GSONTypeAdapters_17_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_17 *create_GSONTypeAdapters_17_init();

@interface GSONTypeAdapters_18 : GSONTypeAdapter

- (instancetype)init;

- (JavaMathBigInteger *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaMathBigInteger *)value;

- (JavaMathBigInteger *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaMathBigInteger *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaMathBigInteger *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_18)

__attribute__((unused)) static void GSONTypeAdapters_18_init(GSONTypeAdapters_18 *self);

__attribute__((unused)) static GSONTypeAdapters_18 *new_GSONTypeAdapters_18_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_18 *create_GSONTypeAdapters_18_init();

@interface GSONTypeAdapters_19 : GSONTypeAdapter

- (instancetype)init;

- (JavaLangStringBuilder *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaLangStringBuilder *)value;

- (JavaLangStringBuilder *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangStringBuilder *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaLangStringBuilder *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_19)

__attribute__((unused)) static void GSONTypeAdapters_19_init(GSONTypeAdapters_19 *self);

__attribute__((unused)) static GSONTypeAdapters_19 *new_GSONTypeAdapters_19_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_19 *create_GSONTypeAdapters_19_init();

@interface GSONTypeAdapters_20 : GSONTypeAdapter

- (instancetype)init;

- (JavaLangStringBuffer *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaLangStringBuffer *)value;

- (JavaLangStringBuffer *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangStringBuffer *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaLangStringBuffer *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_20)

__attribute__((unused)) static void GSONTypeAdapters_20_init(GSONTypeAdapters_20 *self);

__attribute__((unused)) static GSONTypeAdapters_20 *new_GSONTypeAdapters_20_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_20 *create_GSONTypeAdapters_20_init();

@interface GSONTypeAdapters_21 : GSONTypeAdapter

- (instancetype)init;

- (JavaNetURL *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaNetURL *)value;

- (JavaNetURL *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaNetURL *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaNetURL *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_21)

__attribute__((unused)) static void GSONTypeAdapters_21_init(GSONTypeAdapters_21 *self);

__attribute__((unused)) static GSONTypeAdapters_21 *new_GSONTypeAdapters_21_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_21 *create_GSONTypeAdapters_21_init();

@interface GSONTypeAdapters_22 : GSONTypeAdapter

- (instancetype)init;

- (JavaNetURI *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaNetURI *)value;

- (JavaNetURI *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaNetURI *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaNetURI *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_22)

__attribute__((unused)) static void GSONTypeAdapters_22_init(GSONTypeAdapters_22 *self);

__attribute__((unused)) static GSONTypeAdapters_22 *new_GSONTypeAdapters_22_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_22 *create_GSONTypeAdapters_22_init();

@interface GSONTypeAdapters_23 : GSONTypeAdapter

- (instancetype)init;

- (JavaNetInetAddress *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaNetInetAddress *)value;

- (JavaNetInetAddress *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaNetInetAddress *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaNetInetAddress *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_23)

__attribute__((unused)) static void GSONTypeAdapters_23_init(GSONTypeAdapters_23 *self);

__attribute__((unused)) static GSONTypeAdapters_23 *new_GSONTypeAdapters_23_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_23 *create_GSONTypeAdapters_23_init();

@interface GSONTypeAdapters_24 : GSONTypeAdapter

- (instancetype)init;

- (JavaUtilUUID *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilUUID *)value;

- (JavaUtilUUID *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilUUID *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaUtilUUID *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_24)

__attribute__((unused)) static void GSONTypeAdapters_24_init(GSONTypeAdapters_24 *self);

__attribute__((unused)) static GSONTypeAdapters_24 *new_GSONTypeAdapters_24_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_24 *create_GSONTypeAdapters_24_init();

@interface GSONTypeAdapters_25 : GSONTypeAdapter

- (instancetype)init;

- (JavaUtilCurrency *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilCurrency *)value;

- (JavaUtilCurrency *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilCurrency *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaUtilCurrency *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_25)

__attribute__((unused)) static void GSONTypeAdapters_25_init(GSONTypeAdapters_25 *self);

__attribute__((unused)) static GSONTypeAdapters_25 *new_GSONTypeAdapters_25_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_25 *create_GSONTypeAdapters_25_init();

@interface GSONTypeAdapters_26 : NSObject < GSONTypeAdapterFactory >

- (instancetype)init;

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_26)

__attribute__((unused)) static void GSONTypeAdapters_26_init(GSONTypeAdapters_26 *self);

__attribute__((unused)) static GSONTypeAdapters_26 *new_GSONTypeAdapters_26_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_26 *create_GSONTypeAdapters_26_init();

@interface GSONTypeAdapters_26_1 : GSONTypeAdapter {
 @public
  GSONTypeAdapter *val$dateTypeAdapter_;
}

- (instancetype)initWithGSONTypeAdapter:(GSONTypeAdapter *)capture$0;

- (JavaSqlTimestamp *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaSqlTimestamp *)value;

- (JavaSqlTimestamp *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaSqlTimestamp *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaSqlTimestamp *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_26_1)

__attribute__((unused)) static void GSONTypeAdapters_26_1_initWithGSONTypeAdapter_(GSONTypeAdapters_26_1 *self, GSONTypeAdapter *capture$0);

__attribute__((unused)) static GSONTypeAdapters_26_1 *new_GSONTypeAdapters_26_1_initWithGSONTypeAdapter_(GSONTypeAdapter *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_26_1 *create_GSONTypeAdapters_26_1_initWithGSONTypeAdapter_(GSONTypeAdapter *capture$0);

@interface GSONTypeAdapters_27 : GSONTypeAdapter

- (instancetype)init;

- (JavaUtilCalendar *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilCalendar *)value;

- (JavaUtilCalendar *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilCalendar *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaUtilCalendar *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_27)

inline NSString *GSONTypeAdapters_27_get_YEAR();
static NSString *GSONTypeAdapters_27_YEAR = @"year";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters_27, YEAR, NSString *)

inline NSString *GSONTypeAdapters_27_get_MONTH();
static NSString *GSONTypeAdapters_27_MONTH = @"month";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters_27, MONTH, NSString *)

inline NSString *GSONTypeAdapters_27_get_DAY_OF_MONTH();
static NSString *GSONTypeAdapters_27_DAY_OF_MONTH = @"dayOfMonth";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters_27, DAY_OF_MONTH, NSString *)

inline NSString *GSONTypeAdapters_27_get_HOUR_OF_DAY();
static NSString *GSONTypeAdapters_27_HOUR_OF_DAY = @"hourOfDay";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters_27, HOUR_OF_DAY, NSString *)

inline NSString *GSONTypeAdapters_27_get_MINUTE();
static NSString *GSONTypeAdapters_27_MINUTE = @"minute";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters_27, MINUTE, NSString *)

inline NSString *GSONTypeAdapters_27_get_SECOND();
static NSString *GSONTypeAdapters_27_SECOND = @"second";
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTypeAdapters_27, SECOND, NSString *)

__attribute__((unused)) static void GSONTypeAdapters_27_init(GSONTypeAdapters_27 *self);

__attribute__((unused)) static GSONTypeAdapters_27 *new_GSONTypeAdapters_27_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_27 *create_GSONTypeAdapters_27_init();

@interface GSONTypeAdapters_28 : GSONTypeAdapter

- (instancetype)init;

- (JavaUtilLocale *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilLocale *)value;

- (JavaUtilLocale *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilLocale *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaUtilLocale *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_28)

__attribute__((unused)) static void GSONTypeAdapters_28_init(GSONTypeAdapters_28 *self);

__attribute__((unused)) static GSONTypeAdapters_28 *new_GSONTypeAdapters_28_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_28 *create_GSONTypeAdapters_28_init();

@interface GSONTypeAdapters_29 : GSONTypeAdapter

- (instancetype)init;

- (GSONJsonElement *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(GSONJsonElement *)value;

- (GSONJsonElement *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (GSONJsonElement *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (GSONJsonElement *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_29)

__attribute__((unused)) static void GSONTypeAdapters_29_init(GSONTypeAdapters_29 *self);

__attribute__((unused)) static GSONTypeAdapters_29 *new_GSONTypeAdapters_29_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_29 *create_GSONTypeAdapters_29_init();

@interface GSONTypeAdapters_EnumTypeAdapter : GSONTypeAdapter {
 @public
  id<JavaUtilMap> nameToConstant_;
  id<JavaUtilMap> constantToName_;
}

- (instancetype)initWithIOSClass:(IOSClass *)classOfT;

- (JavaLangEnum *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaLangEnum *)value;

- (JavaLangEnum *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangEnum *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaLangEnum *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_EnumTypeAdapter)

J2OBJC_FIELD_SETTER(GSONTypeAdapters_EnumTypeAdapter, nameToConstant_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(GSONTypeAdapters_EnumTypeAdapter, constantToName_, id<JavaUtilMap>)

__attribute__((unused)) static void GSONTypeAdapters_EnumTypeAdapter_initWithIOSClass_(GSONTypeAdapters_EnumTypeAdapter *self, IOSClass *classOfT);

__attribute__((unused)) static GSONTypeAdapters_EnumTypeAdapter *new_GSONTypeAdapters_EnumTypeAdapter_initWithIOSClass_(IOSClass *classOfT) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_EnumTypeAdapter *create_GSONTypeAdapters_EnumTypeAdapter_initWithIOSClass_(IOSClass *classOfT);

J2OBJC_TYPE_LITERAL_HEADER(GSONTypeAdapters_EnumTypeAdapter)

@interface GSONTypeAdapters_30 : NSObject < GSONTypeAdapterFactory >

- (instancetype)init;

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_30)

__attribute__((unused)) static void GSONTypeAdapters_30_init(GSONTypeAdapters_30 *self);

__attribute__((unused)) static GSONTypeAdapters_30 *new_GSONTypeAdapters_30_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_30 *create_GSONTypeAdapters_30_init();

@interface GSONTypeAdapters_31 : NSObject < GSONTypeAdapterFactory > {
 @public
  GSONTypeToken *val$type_;
  GSONTypeAdapter *val$typeAdapter_;
}

- (instancetype)initWithGSONTypeToken:(GSONTypeToken *)capture$0
                  withGSONTypeAdapter:(GSONTypeAdapter *)capture$1;

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_31)

__attribute__((unused)) static void GSONTypeAdapters_31_initWithGSONTypeToken_withGSONTypeAdapter_(GSONTypeAdapters_31 *self, GSONTypeToken *capture$0, GSONTypeAdapter *capture$1);

__attribute__((unused)) static GSONTypeAdapters_31 *new_GSONTypeAdapters_31_initWithGSONTypeToken_withGSONTypeAdapter_(GSONTypeToken *capture$0, GSONTypeAdapter *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_31 *create_GSONTypeAdapters_31_initWithGSONTypeToken_withGSONTypeAdapter_(GSONTypeToken *capture$0, GSONTypeAdapter *capture$1);

@interface GSONTypeAdapters_32 : NSObject < GSONTypeAdapterFactory > {
 @public
  IOSClass *val$type_;
  GSONTypeAdapter *val$typeAdapter_;
}

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
             withGSONTypeAdapter:(GSONTypeAdapter *)capture$1;

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_32)

__attribute__((unused)) static void GSONTypeAdapters_32_initWithIOSClass_withGSONTypeAdapter_(GSONTypeAdapters_32 *self, IOSClass *capture$0, GSONTypeAdapter *capture$1);

__attribute__((unused)) static GSONTypeAdapters_32 *new_GSONTypeAdapters_32_initWithIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, GSONTypeAdapter *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_32 *create_GSONTypeAdapters_32_initWithIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, GSONTypeAdapter *capture$1);

@interface GSONTypeAdapters_33 : NSObject < GSONTypeAdapterFactory > {
 @public
  IOSClass *val$unboxed_;
  IOSClass *val$boxed_;
  GSONTypeAdapter *val$typeAdapter_;
}

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
                    withIOSClass:(IOSClass *)capture$1
             withGSONTypeAdapter:(GSONTypeAdapter *)capture$2;

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_33)

__attribute__((unused)) static void GSONTypeAdapters_33_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(GSONTypeAdapters_33 *self, IOSClass *capture$0, IOSClass *capture$1, GSONTypeAdapter *capture$2);

__attribute__((unused)) static GSONTypeAdapters_33 *new_GSONTypeAdapters_33_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GSONTypeAdapter *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_33 *create_GSONTypeAdapters_33_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GSONTypeAdapter *capture$2);

@interface GSONTypeAdapters_34 : NSObject < GSONTypeAdapterFactory > {
 @public
  IOSClass *val$base_;
  IOSClass *val$sub_;
  GSONTypeAdapter *val$typeAdapter_;
}

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
                    withIOSClass:(IOSClass *)capture$1
             withGSONTypeAdapter:(GSONTypeAdapter *)capture$2;

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_34)

__attribute__((unused)) static void GSONTypeAdapters_34_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(GSONTypeAdapters_34 *self, IOSClass *capture$0, IOSClass *capture$1, GSONTypeAdapter *capture$2);

__attribute__((unused)) static GSONTypeAdapters_34 *new_GSONTypeAdapters_34_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GSONTypeAdapter *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_34 *create_GSONTypeAdapters_34_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GSONTypeAdapter *capture$2);

@interface GSONTypeAdapters_35 : NSObject < GSONTypeAdapterFactory > {
 @public
  IOSClass *val$clazz_;
  GSONTypeAdapter *val$typeAdapter_;
}

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
             withGSONTypeAdapter:(GSONTypeAdapter *)capture$1;

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_35)

__attribute__((unused)) static void GSONTypeAdapters_35_initWithIOSClass_withGSONTypeAdapter_(GSONTypeAdapters_35 *self, IOSClass *capture$0, GSONTypeAdapter *capture$1);

__attribute__((unused)) static GSONTypeAdapters_35 *new_GSONTypeAdapters_35_initWithIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, GSONTypeAdapter *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_35 *create_GSONTypeAdapters_35_initWithIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, GSONTypeAdapter *capture$1);

@interface GSONTypeAdapters_35_1 : GSONTypeAdapter {
 @public
  GSONTypeAdapters_35 *this$0_;
  IOSClass *val$requestedType_;
}

- (instancetype)initWithGSONTypeAdapters_35:(GSONTypeAdapters_35 *)outer$
                               withIOSClass:(IOSClass *)capture$0;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(id)value;

- (id)readWithGSONJsonReader:(GSONJsonReader *)inArg;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONTypeAdapters_35_1)

__attribute__((unused)) static void GSONTypeAdapters_35_1_initWithGSONTypeAdapters_35_withIOSClass_(GSONTypeAdapters_35_1 *self, GSONTypeAdapters_35 *outer$, IOSClass *capture$0);

__attribute__((unused)) static GSONTypeAdapters_35_1 *new_GSONTypeAdapters_35_1_initWithGSONTypeAdapters_35_withIOSClass_(GSONTypeAdapters_35 *outer$, IOSClass *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static GSONTypeAdapters_35_1 *create_GSONTypeAdapters_35_1_initWithGSONTypeAdapters_35_withIOSClass_(GSONTypeAdapters_35 *outer$, IOSClass *capture$0);

J2OBJC_INITIALIZED_DEFN(GSONTypeAdapters)

GSONTypeAdapter *GSONTypeAdapters_CLASS;
id<GSONTypeAdapterFactory> GSONTypeAdapters_CLASS_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_BIT_SET;
id<GSONTypeAdapterFactory> GSONTypeAdapters_BIT_SET_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_BOOLEAN;
GSONTypeAdapter *GSONTypeAdapters_BOOLEAN_AS_STRING;
id<GSONTypeAdapterFactory> GSONTypeAdapters_BOOLEAN_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_BYTE;
id<GSONTypeAdapterFactory> GSONTypeAdapters_BYTE_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_SHORT;
id<GSONTypeAdapterFactory> GSONTypeAdapters_SHORT_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_INTEGER;
id<GSONTypeAdapterFactory> GSONTypeAdapters_INTEGER_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_ATOMIC_INTEGER;
id<GSONTypeAdapterFactory> GSONTypeAdapters_ATOMIC_INTEGER_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_ATOMIC_BOOLEAN;
id<GSONTypeAdapterFactory> GSONTypeAdapters_ATOMIC_BOOLEAN_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_ATOMIC_INTEGER_ARRAY;
id<GSONTypeAdapterFactory> GSONTypeAdapters_ATOMIC_INTEGER_ARRAY_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_LONG;
GSONTypeAdapter *GSONTypeAdapters_FLOAT;
GSONTypeAdapter *GSONTypeAdapters_DOUBLE;
GSONTypeAdapter *GSONTypeAdapters_NUMBER;
id<GSONTypeAdapterFactory> GSONTypeAdapters_NUMBER_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_CHARACTER;
id<GSONTypeAdapterFactory> GSONTypeAdapters_CHARACTER_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_STRING;
GSONTypeAdapter *GSONTypeAdapters_BIG_DECIMAL;
GSONTypeAdapter *GSONTypeAdapters_BIG_INTEGER;
id<GSONTypeAdapterFactory> GSONTypeAdapters_STRING_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_STRING_BUILDER;
id<GSONTypeAdapterFactory> GSONTypeAdapters_STRING_BUILDER_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_STRING_BUFFER;
id<GSONTypeAdapterFactory> GSONTypeAdapters_STRING_BUFFER_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_URL;
id<GSONTypeAdapterFactory> GSONTypeAdapters_URL_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_URI;
id<GSONTypeAdapterFactory> GSONTypeAdapters_URI_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_INET_ADDRESS;
id<GSONTypeAdapterFactory> GSONTypeAdapters_INET_ADDRESS_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_UUID;
id<GSONTypeAdapterFactory> GSONTypeAdapters_UUID_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_CURRENCY;
id<GSONTypeAdapterFactory> GSONTypeAdapters_CURRENCY_FACTORY;
id<GSONTypeAdapterFactory> GSONTypeAdapters_TIMESTAMP_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_CALENDAR;
id<GSONTypeAdapterFactory> GSONTypeAdapters_CALENDAR_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_LOCALE;
id<GSONTypeAdapterFactory> GSONTypeAdapters_LOCALE_FACTORY;
GSONTypeAdapter *GSONTypeAdapters_JSON_ELEMENT;
id<GSONTypeAdapterFactory> GSONTypeAdapters_JSON_ELEMENT_FACTORY;
id<GSONTypeAdapterFactory> GSONTypeAdapters_ENUM_FACTORY;

@implementation GSONTypeAdapters

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<GSONTypeAdapterFactory>)newFactoryWithGSONTypeToken:(GSONTypeToken *)type
                                      withGSONTypeAdapter:(GSONTypeAdapter *)typeAdapter {
  return GSONTypeAdapters_newFactoryWithGSONTypeToken_withGSONTypeAdapter_(type, typeAdapter);
}

+ (id<GSONTypeAdapterFactory>)newFactoryWithIOSClass:(IOSClass *)type
                                 withGSONTypeAdapter:(GSONTypeAdapter *)typeAdapter {
  return GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(type, typeAdapter);
}

+ (id<GSONTypeAdapterFactory>)newFactoryWithIOSClass:(IOSClass *)unboxed
                                        withIOSClass:(IOSClass *)boxed
                                 withGSONTypeAdapter:(GSONTypeAdapter *)typeAdapter {
  return GSONTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGSONTypeAdapter_(unboxed, boxed, typeAdapter);
}

+ (id<GSONTypeAdapterFactory>)newFactoryForMultipleTypesWithIOSClass:(IOSClass *)base
                                                        withIOSClass:(IOSClass *)sub
                                                 withGSONTypeAdapter:(GSONTypeAdapter *)typeAdapter {
  return GSONTypeAdapters_newFactoryForMultipleTypesWithIOSClass_withIOSClass_withGSONTypeAdapter_(base, sub, typeAdapter);
}

+ (id<GSONTypeAdapterFactory>)newTypeHierarchyFactoryWithIOSClass:(IOSClass *)clazz
                                              withGSONTypeAdapter:(GSONTypeAdapter *)typeAdapter {
  return GSONTypeAdapters_newTypeHierarchyFactoryWithIOSClass_withGSONTypeAdapter_(clazz, typeAdapter);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGSONTypeAdapterFactory;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LGSONTypeAdapterFactory;", 0x9, 0, 3, -1, 4, -1, -1 },
    { NULL, "LGSONTypeAdapterFactory;", 0x9, 0, 5, -1, 6, -1, -1 },
    { NULL, "LGSONTypeAdapterFactory;", 0x9, 7, 5, -1, 8, -1, -1 },
    { NULL, "LGSONTypeAdapterFactory;", 0x9, 9, 3, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(newFactoryWithGSONTypeToken:withGSONTypeAdapter:);
  methods[2].selector = @selector(newFactoryWithIOSClass:withGSONTypeAdapter:);
  methods[3].selector = @selector(newFactoryWithIOSClass:withIOSClass:withGSONTypeAdapter:);
  methods[4].selector = @selector(newFactoryForMultipleTypesWithIOSClass:withIOSClass:withGSONTypeAdapter:);
  methods[5].selector = @selector(newTypeHierarchyFactoryWithIOSClass:withGSONTypeAdapter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CLASS", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 11, 12, -1 },
    { "CLASS_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "BIT_SET", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 14, 15, -1 },
    { "BIT_SET_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "BOOLEAN", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 17, 18, -1 },
    { "BOOLEAN_AS_STRING", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 19, 18, -1 },
    { "BOOLEAN_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "BYTE", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 21, 22, -1 },
    { "BYTE_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "SHORT", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 24, 22, -1 },
    { "SHORT_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 25, -1, -1 },
    { "INTEGER", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 26, 22, -1 },
    { "INTEGER_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 27, -1, -1 },
    { "ATOMIC_INTEGER", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 28, 29, -1 },
    { "ATOMIC_INTEGER_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 30, -1, -1 },
    { "ATOMIC_BOOLEAN", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 31, 32, -1 },
    { "ATOMIC_BOOLEAN_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 33, -1, -1 },
    { "ATOMIC_INTEGER_ARRAY", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 34, 35, -1 },
    { "ATOMIC_INTEGER_ARRAY_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 36, -1, -1 },
    { "LONG", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 37, 22, -1 },
    { "FLOAT", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 38, 22, -1 },
    { "DOUBLE", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 39, 22, -1 },
    { "NUMBER", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 40, 22, -1 },
    { "NUMBER_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 41, -1, -1 },
    { "CHARACTER", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 42, 43, -1 },
    { "CHARACTER_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 44, -1, -1 },
    { "STRING", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 45, 46, -1 },
    { "BIG_DECIMAL", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 47, 48, -1 },
    { "BIG_INTEGER", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 49, 50, -1 },
    { "STRING_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 51, -1, -1 },
    { "STRING_BUILDER", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 52, 53, -1 },
    { "STRING_BUILDER_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 54, -1, -1 },
    { "STRING_BUFFER", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 55, 56, -1 },
    { "STRING_BUFFER_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 57, -1, -1 },
    { "URL", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 58, 59, -1 },
    { "URL_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 60, -1, -1 },
    { "URI", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 61, 62, -1 },
    { "URI_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 63, -1, -1 },
    { "INET_ADDRESS", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 64, 65, -1 },
    { "INET_ADDRESS_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 66, -1, -1 },
    { "UUID", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 67, 68, -1 },
    { "UUID_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 69, -1, -1 },
    { "CURRENCY", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 70, 71, -1 },
    { "CURRENCY_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 72, -1, -1 },
    { "TIMESTAMP_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 73, -1, -1 },
    { "CALENDAR", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 74, 75, -1 },
    { "CALENDAR_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 76, -1, -1 },
    { "LOCALE", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 77, 78, -1 },
    { "LOCALE_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 79, -1, -1 },
    { "JSON_ELEMENT", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x19, -1, 80, 81, -1 },
    { "JSON_ELEMENT_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 82, -1, -1 },
    { "ENUM_FACTORY", "LGSONTypeAdapterFactory;", .constantValue.asLong = 0, 0x19, -1, 83, -1, -1 },
  };
  static const void *ptrTable[] = { "newFactory", "LGSONTypeToken;LGSONTypeAdapter;", "<TT:Ljava/lang/Object;>(Lcom/google/gson/reflect/TypeToken<TTT;>;Lcom/google/gson/TypeAdapter<TTT;>;)Lcom/google/gson/TypeAdapterFactory;", "LIOSClass;LGSONTypeAdapter;", "<TT:Ljava/lang/Object;>(Ljava/lang/Class<TTT;>;Lcom/google/gson/TypeAdapter<TTT;>;)Lcom/google/gson/TypeAdapterFactory;", "LIOSClass;LIOSClass;LGSONTypeAdapter;", "<TT:Ljava/lang/Object;>(Ljava/lang/Class<TTT;>;Ljava/lang/Class<TTT;>;Lcom/google/gson/TypeAdapter<-TTT;>;)Lcom/google/gson/TypeAdapterFactory;", "newFactoryForMultipleTypes", "<TT:Ljava/lang/Object;>(Ljava/lang/Class<TTT;>;Ljava/lang/Class<+TTT;>;Lcom/google/gson/TypeAdapter<-TTT;>;)Lcom/google/gson/TypeAdapterFactory;", "newTypeHierarchyFactory", "<T1:Ljava/lang/Object;>(Ljava/lang/Class<TT1;>;Lcom/google/gson/TypeAdapter<TT1;>;)Lcom/google/gson/TypeAdapterFactory;", &GSONTypeAdapters_CLASS, "Lcom/google/gson/TypeAdapter<Ljava/lang/Class;>;", &GSONTypeAdapters_CLASS_FACTORY, &GSONTypeAdapters_BIT_SET, "Lcom/google/gson/TypeAdapter<Ljava/util/BitSet;>;", &GSONTypeAdapters_BIT_SET_FACTORY, &GSONTypeAdapters_BOOLEAN, "Lcom/google/gson/TypeAdapter<Ljava/lang/Boolean;>;", &GSONTypeAdapters_BOOLEAN_AS_STRING, &GSONTypeAdapters_BOOLEAN_FACTORY, &GSONTypeAdapters_BYTE, "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;", &GSONTypeAdapters_BYTE_FACTORY, &GSONTypeAdapters_SHORT, &GSONTypeAdapters_SHORT_FACTORY, &GSONTypeAdapters_INTEGER, &GSONTypeAdapters_INTEGER_FACTORY, &GSONTypeAdapters_ATOMIC_INTEGER, "Lcom/google/gson/TypeAdapter<Ljava/util/concurrent/atomic/AtomicInteger;>;", &GSONTypeAdapters_ATOMIC_INTEGER_FACTORY, &GSONTypeAdapters_ATOMIC_BOOLEAN, "Lcom/google/gson/TypeAdapter<Ljava/util/concurrent/atomic/AtomicBoolean;>;", &GSONTypeAdapters_ATOMIC_BOOLEAN_FACTORY, &GSONTypeAdapters_ATOMIC_INTEGER_ARRAY, "Lcom/google/gson/TypeAdapter<Ljava/util/concurrent/atomic/AtomicIntegerArray;>;", &GSONTypeAdapters_ATOMIC_INTEGER_ARRAY_FACTORY, &GSONTypeAdapters_LONG, &GSONTypeAdapters_FLOAT, &GSONTypeAdapters_DOUBLE, &GSONTypeAdapters_NUMBER, &GSONTypeAdapters_NUMBER_FACTORY, &GSONTypeAdapters_CHARACTER, "Lcom/google/gson/TypeAdapter<Ljava/lang/Character;>;", &GSONTypeAdapters_CHARACTER_FACTORY, &GSONTypeAdapters_STRING, "Lcom/google/gson/TypeAdapter<Ljava/lang/String;>;", &GSONTypeAdapters_BIG_DECIMAL, "Lcom/google/gson/TypeAdapter<Ljava/math/BigDecimal;>;", &GSONTypeAdapters_BIG_INTEGER, "Lcom/google/gson/TypeAdapter<Ljava/math/BigInteger;>;", &GSONTypeAdapters_STRING_FACTORY, &GSONTypeAdapters_STRING_BUILDER, "Lcom/google/gson/TypeAdapter<Ljava/lang/StringBuilder;>;", &GSONTypeAdapters_STRING_BUILDER_FACTORY, &GSONTypeAdapters_STRING_BUFFER, "Lcom/google/gson/TypeAdapter<Ljava/lang/StringBuffer;>;", &GSONTypeAdapters_STRING_BUFFER_FACTORY, &GSONTypeAdapters_URL, "Lcom/google/gson/TypeAdapter<Ljava/net/URL;>;", &GSONTypeAdapters_URL_FACTORY, &GSONTypeAdapters_URI, "Lcom/google/gson/TypeAdapter<Ljava/net/URI;>;", &GSONTypeAdapters_URI_FACTORY, &GSONTypeAdapters_INET_ADDRESS, "Lcom/google/gson/TypeAdapter<Ljava/net/InetAddress;>;", &GSONTypeAdapters_INET_ADDRESS_FACTORY, &GSONTypeAdapters_UUID, "Lcom/google/gson/TypeAdapter<Ljava/util/UUID;>;", &GSONTypeAdapters_UUID_FACTORY, &GSONTypeAdapters_CURRENCY, "Lcom/google/gson/TypeAdapter<Ljava/util/Currency;>;", &GSONTypeAdapters_CURRENCY_FACTORY, &GSONTypeAdapters_TIMESTAMP_FACTORY, &GSONTypeAdapters_CALENDAR, "Lcom/google/gson/TypeAdapter<Ljava/util/Calendar;>;", &GSONTypeAdapters_CALENDAR_FACTORY, &GSONTypeAdapters_LOCALE, "Lcom/google/gson/TypeAdapter<Ljava/util/Locale;>;", &GSONTypeAdapters_LOCALE_FACTORY, &GSONTypeAdapters_JSON_ELEMENT, "Lcom/google/gson/TypeAdapter<Lcom/google/gson/JsonElement;>;", &GSONTypeAdapters_JSON_ELEMENT_FACTORY, &GSONTypeAdapters_ENUM_FACTORY, "LGSONTypeAdapters_EnumTypeAdapter;" };
  static const J2ObjcClassInfo _GSONTypeAdapters = { "TypeAdapters", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x11, 6, 52, -1, 84, -1, -1, -1 };
  return &_GSONTypeAdapters;
}

+ (void)initialize {
  if (self == [GSONTypeAdapters class]) {
    GSONTypeAdapters_CLASS = [new_GSONTypeAdapters_1_init() nullSafe];
    GSONTypeAdapters_CLASS_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(IOSClass_class_(), GSONTypeAdapters_CLASS);
    GSONTypeAdapters_BIT_SET = [new_GSONTypeAdapters_2_init() nullSafe];
    GSONTypeAdapters_BIT_SET_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(JavaUtilBitSet_class_(), GSONTypeAdapters_BIT_SET);
    GSONTypeAdapters_BOOLEAN = new_GSONTypeAdapters_3_init();
    GSONTypeAdapters_BOOLEAN_AS_STRING = new_GSONTypeAdapters_4_init();
    GSONTypeAdapters_BOOLEAN_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGSONTypeAdapter_([IOSClass booleanClass], JavaLangBoolean_class_(), GSONTypeAdapters_BOOLEAN);
    GSONTypeAdapters_BYTE = new_GSONTypeAdapters_5_init();
    GSONTypeAdapters_BYTE_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGSONTypeAdapter_([IOSClass byteClass], JavaLangByte_class_(), GSONTypeAdapters_BYTE);
    GSONTypeAdapters_SHORT = new_GSONTypeAdapters_6_init();
    GSONTypeAdapters_SHORT_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGSONTypeAdapter_([IOSClass shortClass], JavaLangShort_class_(), GSONTypeAdapters_SHORT);
    GSONTypeAdapters_INTEGER = new_GSONTypeAdapters_7_init();
    GSONTypeAdapters_INTEGER_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGSONTypeAdapter_([IOSClass intClass], JavaLangInteger_class_(), GSONTypeAdapters_INTEGER);
    GSONTypeAdapters_ATOMIC_INTEGER = [new_GSONTypeAdapters_8_init() nullSafe];
    GSONTypeAdapters_ATOMIC_INTEGER_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(JavaUtilConcurrentAtomicAtomicInteger_class_(), GSONTypeAdapters_ATOMIC_INTEGER);
    GSONTypeAdapters_ATOMIC_BOOLEAN = [new_GSONTypeAdapters_9_init() nullSafe];
    GSONTypeAdapters_ATOMIC_BOOLEAN_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(JavaUtilConcurrentAtomicAtomicBoolean_class_(), GSONTypeAdapters_ATOMIC_BOOLEAN);
    GSONTypeAdapters_ATOMIC_INTEGER_ARRAY = [new_GSONTypeAdapters_10_init() nullSafe];
    GSONTypeAdapters_ATOMIC_INTEGER_ARRAY_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(JavaUtilConcurrentAtomicAtomicIntegerArray_class_(), GSONTypeAdapters_ATOMIC_INTEGER_ARRAY);
    GSONTypeAdapters_LONG = new_GSONTypeAdapters_11_init();
    GSONTypeAdapters_FLOAT = new_GSONTypeAdapters_12_init();
    GSONTypeAdapters_DOUBLE = new_GSONTypeAdapters_13_init();
    GSONTypeAdapters_NUMBER = new_GSONTypeAdapters_14_init();
    GSONTypeAdapters_NUMBER_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(NSNumber_class_(), GSONTypeAdapters_NUMBER);
    GSONTypeAdapters_CHARACTER = new_GSONTypeAdapters_15_init();
    GSONTypeAdapters_CHARACTER_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGSONTypeAdapter_([IOSClass charClass], JavaLangCharacter_class_(), GSONTypeAdapters_CHARACTER);
    GSONTypeAdapters_STRING = new_GSONTypeAdapters_16_init();
    GSONTypeAdapters_BIG_DECIMAL = new_GSONTypeAdapters_17_init();
    GSONTypeAdapters_BIG_INTEGER = new_GSONTypeAdapters_18_init();
    GSONTypeAdapters_STRING_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(NSString_class_(), GSONTypeAdapters_STRING);
    GSONTypeAdapters_STRING_BUILDER = new_GSONTypeAdapters_19_init();
    GSONTypeAdapters_STRING_BUILDER_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(JavaLangStringBuilder_class_(), GSONTypeAdapters_STRING_BUILDER);
    GSONTypeAdapters_STRING_BUFFER = new_GSONTypeAdapters_20_init();
    GSONTypeAdapters_STRING_BUFFER_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(JavaLangStringBuffer_class_(), GSONTypeAdapters_STRING_BUFFER);
    GSONTypeAdapters_URL = new_GSONTypeAdapters_21_init();
    GSONTypeAdapters_URL_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(JavaNetURL_class_(), GSONTypeAdapters_URL);
    GSONTypeAdapters_URI = new_GSONTypeAdapters_22_init();
    GSONTypeAdapters_URI_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(JavaNetURI_class_(), GSONTypeAdapters_URI);
    GSONTypeAdapters_INET_ADDRESS = new_GSONTypeAdapters_23_init();
    GSONTypeAdapters_INET_ADDRESS_FACTORY = GSONTypeAdapters_newTypeHierarchyFactoryWithIOSClass_withGSONTypeAdapter_(JavaNetInetAddress_class_(), GSONTypeAdapters_INET_ADDRESS);
    GSONTypeAdapters_UUID = new_GSONTypeAdapters_24_init();
    GSONTypeAdapters_UUID_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(JavaUtilUUID_class_(), GSONTypeAdapters_UUID);
    GSONTypeAdapters_CURRENCY = [new_GSONTypeAdapters_25_init() nullSafe];
    GSONTypeAdapters_CURRENCY_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(JavaUtilCurrency_class_(), GSONTypeAdapters_CURRENCY);
    GSONTypeAdapters_TIMESTAMP_FACTORY = new_GSONTypeAdapters_26_init();
    GSONTypeAdapters_CALENDAR = new_GSONTypeAdapters_27_init();
    GSONTypeAdapters_CALENDAR_FACTORY = GSONTypeAdapters_newFactoryForMultipleTypesWithIOSClass_withIOSClass_withGSONTypeAdapter_(JavaUtilCalendar_class_(), JavaUtilGregorianCalendar_class_(), GSONTypeAdapters_CALENDAR);
    GSONTypeAdapters_LOCALE = new_GSONTypeAdapters_28_init();
    GSONTypeAdapters_LOCALE_FACTORY = GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(JavaUtilLocale_class_(), GSONTypeAdapters_LOCALE);
    GSONTypeAdapters_JSON_ELEMENT = new_GSONTypeAdapters_29_init();
    GSONTypeAdapters_JSON_ELEMENT_FACTORY = GSONTypeAdapters_newTypeHierarchyFactoryWithIOSClass_withGSONTypeAdapter_(GSONJsonElement_class_(), GSONTypeAdapters_JSON_ELEMENT);
    GSONTypeAdapters_ENUM_FACTORY = new_GSONTypeAdapters_30_init();
    J2OBJC_SET_INITIALIZED(GSONTypeAdapters)
  }
}

@end

void GSONTypeAdapters_init(GSONTypeAdapters *self) {
  NSObject_init(self);
  @throw new_JavaLangUnsupportedOperationException_init();
}

GSONTypeAdapters *new_GSONTypeAdapters_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters, init)
}

GSONTypeAdapters *create_GSONTypeAdapters_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters, init)
}

id<GSONTypeAdapterFactory> GSONTypeAdapters_newFactoryWithGSONTypeToken_withGSONTypeAdapter_(GSONTypeToken *type, GSONTypeAdapter *typeAdapter) {
  GSONTypeAdapters_initialize();
  return new_GSONTypeAdapters_31_initWithGSONTypeToken_withGSONTypeAdapter_(type, typeAdapter);
}

id<GSONTypeAdapterFactory> GSONTypeAdapters_newFactoryWithIOSClass_withGSONTypeAdapter_(IOSClass *type, GSONTypeAdapter *typeAdapter) {
  GSONTypeAdapters_initialize();
  return new_GSONTypeAdapters_32_initWithIOSClass_withGSONTypeAdapter_(type, typeAdapter);
}

id<GSONTypeAdapterFactory> GSONTypeAdapters_newFactoryWithIOSClass_withIOSClass_withGSONTypeAdapter_(IOSClass *unboxed, IOSClass *boxed, GSONTypeAdapter *typeAdapter) {
  GSONTypeAdapters_initialize();
  return new_GSONTypeAdapters_33_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(unboxed, boxed, typeAdapter);
}

id<GSONTypeAdapterFactory> GSONTypeAdapters_newFactoryForMultipleTypesWithIOSClass_withIOSClass_withGSONTypeAdapter_(IOSClass *base, IOSClass *sub, GSONTypeAdapter *typeAdapter) {
  GSONTypeAdapters_initialize();
  return new_GSONTypeAdapters_34_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(base, sub, typeAdapter);
}

id<GSONTypeAdapterFactory> GSONTypeAdapters_newTypeHierarchyFactoryWithIOSClass_withGSONTypeAdapter_(IOSClass *clazz, GSONTypeAdapter *typeAdapter) {
  GSONTypeAdapters_initialize();
  return new_GSONTypeAdapters_35_initWithIOSClass_withGSONTypeAdapter_(clazz, typeAdapter);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GSONTypeAdapters)

@implementation GSONTypeAdapters_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(IOSClass *)value {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("$$$", @"Attempted to serialize java.lang.Class: ", [((IOSClass *) nil_chk(value)) getName], @". Forgot to register a type adapter?"));
}

- (IOSClass *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeWithGSONJsonWriter:withId:);
  methods[2].selector = @selector(readWithGSONJsonReader:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "write", "LGSONJsonWriter;LIOSClass;", "LJavaIoIOException;", "read", "LGSONJsonReader;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Class;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_1 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_1;
}

@end

void GSONTypeAdapters_1_init(GSONTypeAdapters_1 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_1 *new_GSONTypeAdapters_1_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_1, init)
}

GSONTypeAdapters_1 *create_GSONTypeAdapters_1_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_1, init)
}

@implementation GSONTypeAdapters_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaUtilBitSet *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  JavaUtilBitSet *bitset = new_JavaUtilBitSet_init();
  [((GSONJsonReader *) nil_chk(inArg)) beginArray];
  jint i = 0;
  GSONJsonToken *tokenType = [inArg peek];
  while (tokenType != JreLoadEnum(GSONJsonToken, END_ARRAY)) {
    jboolean set;
    {
      NSString *stringValue;
      switch ([tokenType ordinal]) {
        case GSONJsonToken_Enum_NUMBER:
        set = ([inArg nextInt] != 0);
        break;
        case GSONJsonToken_Enum_BOOLEAN:
        set = [inArg nextBoolean];
        break;
        case GSONJsonToken_Enum_STRING:
        stringValue = [inArg nextString];
        @try {
          set = (JavaLangInteger_parseIntWithNSString_(stringValue) != 0);
        }
        @catch (JavaLangNumberFormatException *e) {
          @throw new_GSONJsonSyntaxException_initWithNSString_(JreStrcat("$$", @"Error: Expecting: bitset number value (1, 0), Found: ", stringValue));
        }
        break;
        default:
        @throw new_GSONJsonSyntaxException_initWithNSString_(JreStrcat("$@", @"Invalid bitset value type: ", tokenType));
      }
    }
    if (set) {
      [bitset setWithInt:i];
    }
    ++i;
    tokenType = [inArg peek];
  }
  [inArg endArray];
  return bitset;
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilBitSet *)src {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) beginArray];
  for (jint i = 0, length = [((JavaUtilBitSet *) nil_chk(src)) length]; i < length; i++) {
    jint value = ([src getWithInt:i]) ? 1 : 0;
    (void) [outArg valueWithLong:value];
  }
  (void) [outArg endArray];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilBitSet;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaUtilBitSet;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/BitSet;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_2 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_2;
}

@end

void GSONTypeAdapters_2_init(GSONTypeAdapters_2 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_2 *new_GSONTypeAdapters_2_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_2, init)
}

GSONTypeAdapters_2 *create_GSONTypeAdapters_2_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_2, init)
}

@implementation GSONTypeAdapters_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangBoolean *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  GSONJsonToken *peek = [((GSONJsonReader *) nil_chk(inArg)) peek];
  if (peek == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  else if (peek == JreLoadEnum(GSONJsonToken, STRING)) {
    return JavaLangBoolean_valueOfWithBoolean_(JavaLangBoolean_parseBooleanWithNSString_([inArg nextString]));
  }
  return JavaLangBoolean_valueOfWithBoolean_([inArg nextBoolean]);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaLangBoolean *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithJavaLangBoolean:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaLangBoolean;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_3 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_3;
}

@end

void GSONTypeAdapters_3_init(GSONTypeAdapters_3 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_3 *new_GSONTypeAdapters_3_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_3, init)
}

GSONTypeAdapters_3 *create_GSONTypeAdapters_3_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_3, init)
}

@implementation GSONTypeAdapters_4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangBoolean *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return JavaLangBoolean_valueOfWithNSString_([inArg nextString]);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaLangBoolean *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? @"null" : [value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaLangBoolean;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_4 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_4;
}

@end

void GSONTypeAdapters_4_init(GSONTypeAdapters_4 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_4 *new_GSONTypeAdapters_4_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_4, init)
}

GSONTypeAdapters_4 *create_GSONTypeAdapters_4_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_4, init)
}

@implementation GSONTypeAdapters_5

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    jint intValue = [inArg nextInt];
    return JavaLangByte_valueOfWithByte_((jbyte) intValue);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_GSONJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LNSNumber;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_5 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_5;
}

@end

void GSONTypeAdapters_5_init(GSONTypeAdapters_5 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_5 *new_GSONTypeAdapters_5_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_5, init)
}

GSONTypeAdapters_5 *create_GSONTypeAdapters_5_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_5, init)
}

@implementation GSONTypeAdapters_6

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    return JavaLangShort_valueOfWithShort_((jshort) [inArg nextInt]);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_GSONJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LNSNumber;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_6 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_6;
}

@end

void GSONTypeAdapters_6_init(GSONTypeAdapters_6 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_6 *new_GSONTypeAdapters_6_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_6, init)
}

GSONTypeAdapters_6 *create_GSONTypeAdapters_6_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_6, init)
}

@implementation GSONTypeAdapters_7

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    return JavaLangInteger_valueOfWithInt_([inArg nextInt]);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_GSONJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LNSNumber;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_7 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_7;
}

@end

void GSONTypeAdapters_7_init(GSONTypeAdapters_7 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_7 *new_GSONTypeAdapters_7_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_7, init)
}

GSONTypeAdapters_7 *create_GSONTypeAdapters_7_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_7, init)
}

@implementation GSONTypeAdapters_8

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaUtilConcurrentAtomicAtomicInteger *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  @try {
    return new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_([((GSONJsonReader *) nil_chk(inArg)) nextInt]);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_GSONJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilConcurrentAtomicAtomicInteger *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithLong:[((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(value)) get]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentAtomicAtomicInteger;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaUtilConcurrentAtomicAtomicInteger;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/concurrent/atomic/AtomicInteger;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_8 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_8;
}

@end

void GSONTypeAdapters_8_init(GSONTypeAdapters_8 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_8 *new_GSONTypeAdapters_8_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_8, init)
}

GSONTypeAdapters_8 *create_GSONTypeAdapters_8_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_8, init)
}

@implementation GSONTypeAdapters_9

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaUtilConcurrentAtomicAtomicBoolean *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  return new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_([((GSONJsonReader *) nil_chk(inArg)) nextBoolean]);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilConcurrentAtomicAtomicBoolean *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithBoolean:[((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(value)) get]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentAtomicAtomicBoolean;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaUtilConcurrentAtomicAtomicBoolean;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/concurrent/atomic/AtomicBoolean;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_9 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_9;
}

@end

void GSONTypeAdapters_9_init(GSONTypeAdapters_9 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_9 *new_GSONTypeAdapters_9_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_9, init)
}

GSONTypeAdapters_9 *create_GSONTypeAdapters_9_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_9, init)
}

@implementation GSONTypeAdapters_10

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaUtilConcurrentAtomicAtomicIntegerArray *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  id<JavaUtilList> list = new_JavaUtilArrayList_init();
  [((GSONJsonReader *) nil_chk(inArg)) beginArray];
  while ([inArg hasNext]) {
    @try {
      jint integer = [inArg nextInt];
      [list addWithId:JavaLangInteger_valueOfWithInt_(integer)];
    }
    @catch (JavaLangNumberFormatException *e) {
      @throw new_GSONJsonSyntaxException_initWithJavaLangThrowable_(e);
    }
  }
  [inArg endArray];
  jint length = [list size];
  JavaUtilConcurrentAtomicAtomicIntegerArray *array = new_JavaUtilConcurrentAtomicAtomicIntegerArray_initWithInt_(length);
  for (jint i = 0; i < length; ++i) {
    [array setWithInt:i withInt:[((JavaLangInteger *) nil_chk([list getWithInt:i])) intValue]];
  }
  return array;
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilConcurrentAtomicAtomicIntegerArray *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) beginArray];
  for (jint i = 0, length = [((JavaUtilConcurrentAtomicAtomicIntegerArray *) nil_chk(value)) length]; i < length; i++) {
    (void) [outArg valueWithLong:[value getWithInt:i]];
  }
  (void) [outArg endArray];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentAtomicAtomicIntegerArray;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaUtilConcurrentAtomicAtomicIntegerArray;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/concurrent/atomic/AtomicIntegerArray;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_10 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_10;
}

@end

void GSONTypeAdapters_10_init(GSONTypeAdapters_10 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_10 *new_GSONTypeAdapters_10_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_10, init)
}

GSONTypeAdapters_10 *create_GSONTypeAdapters_10_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_10, init)
}

@implementation GSONTypeAdapters_11

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    return JavaLangLong_valueOfWithLong_([inArg nextLong]);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_GSONJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LNSNumber;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_11 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_11;
}

@end

void GSONTypeAdapters_11_init(GSONTypeAdapters_11 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_11 *new_GSONTypeAdapters_11_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_11, init)
}

GSONTypeAdapters_11 *create_GSONTypeAdapters_11_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_11, init)
}

@implementation GSONTypeAdapters_12

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return JavaLangFloat_valueOfWithFloat_((jfloat) [inArg nextDouble]);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LNSNumber;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_12 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_12;
}

@end

void GSONTypeAdapters_12_init(GSONTypeAdapters_12 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_12 *new_GSONTypeAdapters_12_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_12, init)
}

GSONTypeAdapters_12 *create_GSONTypeAdapters_12_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_12, init)
}

@implementation GSONTypeAdapters_13

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return JavaLangDouble_valueOfWithDouble_([inArg nextDouble]);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LNSNumber;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_13 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_13;
}

@end

void GSONTypeAdapters_13_init(GSONTypeAdapters_13 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_13 *new_GSONTypeAdapters_13_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_13, init)
}

GSONTypeAdapters_13 *create_GSONTypeAdapters_13_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_13, init)
}

@implementation GSONTypeAdapters_14

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSNumber *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  GSONJsonToken *jsonToken = [((GSONJsonReader *) nil_chk(inArg)) peek];
  switch ([jsonToken ordinal]) {
    case GSONJsonToken_Enum_NULL:
    [inArg nextNull];
    return nil;
    case GSONJsonToken_Enum_NUMBER:
    case GSONJsonToken_Enum_STRING:
    return new_GSONLazilyParsedNumber_initWithNSString_([inArg nextString]);
    default:
    @throw new_GSONJsonSyntaxException_initWithNSString_(JreStrcat("$@", @"Expecting number, got: ", jsonToken));
  }
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSNumber *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LNSNumber;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_14 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_14;
}

@end

void GSONTypeAdapters_14_init(GSONTypeAdapters_14 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_14 *new_GSONTypeAdapters_14_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_14, init)
}

GSONTypeAdapters_14 *create_GSONTypeAdapters_14_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_14, init)
}

@implementation GSONTypeAdapters_15

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangCharacter *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  NSString *str = [inArg nextString];
  if ([((NSString *) nil_chk(str)) java_length] != 1) {
    @throw new_GSONJsonSyntaxException_initWithNSString_(JreStrcat("$$", @"Expecting character, got: ", str));
  }
  return JavaLangCharacter_valueOfWithChar_([str charAtWithInt:0]);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaLangCharacter *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : NSString_java_valueOf_(value)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharacter;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaLangCharacter;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Character;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_15 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_15;
}

@end

void GSONTypeAdapters_15_init(GSONTypeAdapters_15 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_15 *new_GSONTypeAdapters_15_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_15, init)
}

GSONTypeAdapters_15 *create_GSONTypeAdapters_15_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_15, init)
}

@implementation GSONTypeAdapters_16

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  GSONJsonToken *peek = [((GSONJsonReader *) nil_chk(inArg)) peek];
  if (peek == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  if (peek == JreLoadEnum(GSONJsonToken, BOOLEAN)) {
    return JavaLangBoolean_toStringWithBoolean_([inArg nextBoolean]);
  }
  return [inArg nextString];
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(NSString *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LNSString;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_16 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_16;
}

@end

void GSONTypeAdapters_16_init(GSONTypeAdapters_16 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_16 *new_GSONTypeAdapters_16_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_16, init)
}

GSONTypeAdapters_16 *create_GSONTypeAdapters_16_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_16, init)
}

@implementation GSONTypeAdapters_17

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaMathBigDecimal *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    return new_JavaMathBigDecimal_initWithNSString_([inArg nextString]);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_GSONJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaMathBigDecimal *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigDecimal;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaMathBigDecimal;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/math/BigDecimal;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_17 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_17;
}

@end

void GSONTypeAdapters_17_init(GSONTypeAdapters_17 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_17 *new_GSONTypeAdapters_17_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_17, init)
}

GSONTypeAdapters_17 *create_GSONTypeAdapters_17_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_17, init)
}

@implementation GSONTypeAdapters_18

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaMathBigInteger *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    return new_JavaMathBigInteger_initWithNSString_([inArg nextString]);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_GSONJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaMathBigInteger *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaMathBigInteger;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/math/BigInteger;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_18 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_18;
}

@end

void GSONTypeAdapters_18_init(GSONTypeAdapters_18 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_18 *new_GSONTypeAdapters_18_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_18, init)
}

GSONTypeAdapters_18 *create_GSONTypeAdapters_18_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_18, init)
}

@implementation GSONTypeAdapters_19

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_19_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangStringBuilder *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return new_JavaLangStringBuilder_initWithNSString_([inArg nextString]);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaLangStringBuilder *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaLangStringBuilder;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/StringBuilder;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_19 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_19;
}

@end

void GSONTypeAdapters_19_init(GSONTypeAdapters_19 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_19 *new_GSONTypeAdapters_19_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_19, init)
}

GSONTypeAdapters_19 *create_GSONTypeAdapters_19_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_19, init)
}

@implementation GSONTypeAdapters_20

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_20_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangStringBuffer *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return new_JavaLangStringBuffer_initWithNSString_([inArg nextString]);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaLangStringBuffer *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuffer;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaLangStringBuffer;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/lang/StringBuffer;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_20 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_20;
}

@end

void GSONTypeAdapters_20_init(GSONTypeAdapters_20 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_20 *new_GSONTypeAdapters_20_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_20, init)
}

GSONTypeAdapters_20 *create_GSONTypeAdapters_20_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_20, init)
}

@implementation GSONTypeAdapters_21

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_21_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaNetURL *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  NSString *nextString = [inArg nextString];
  return [@"null" isEqual:nextString] ? nil : new_JavaNetURL_initWithNSString_(nextString);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaNetURL *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value toExternalForm]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetURL;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaNetURL;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/net/URL;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_21 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_21;
}

@end

void GSONTypeAdapters_21_init(GSONTypeAdapters_21 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_21 *new_GSONTypeAdapters_21_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_21, init)
}

GSONTypeAdapters_21 *create_GSONTypeAdapters_21_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_21, init)
}

@implementation GSONTypeAdapters_22

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_22_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaNetURI *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  @try {
    NSString *nextString = [inArg nextString];
    return [@"null" isEqual:nextString] ? nil : new_JavaNetURI_initWithNSString_(nextString);
  }
  @catch (JavaNetURISyntaxException *e) {
    @throw new_GSONJsonIOException_initWithJavaLangThrowable_(e);
  }
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaNetURI *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value toASCIIString]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetURI;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaNetURI;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/net/URI;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_22 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_22;
}

@end

void GSONTypeAdapters_22_init(GSONTypeAdapters_22 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_22 *new_GSONTypeAdapters_22_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_22, init)
}

GSONTypeAdapters_22 *create_GSONTypeAdapters_22_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_22, init)
}

@implementation GSONTypeAdapters_23

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_23_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaNetInetAddress *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return JavaNetInetAddress_getByNameWithNSString_([inArg nextString]);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaNetInetAddress *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value getHostAddress]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetInetAddress;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaNetInetAddress;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/net/InetAddress;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_23 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_23;
}

@end

void GSONTypeAdapters_23_init(GSONTypeAdapters_23 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_23 *new_GSONTypeAdapters_23_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_23, init)
}

GSONTypeAdapters_23 *create_GSONTypeAdapters_23_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_23, init)
}

@implementation GSONTypeAdapters_24

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_24_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaUtilUUID *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return JavaUtilUUID_fromStringWithNSString_([inArg nextString]);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilUUID *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilUUID;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaUtilUUID;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/UUID;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_24 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_24;
}

@end

void GSONTypeAdapters_24_init(GSONTypeAdapters_24 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_24 *new_GSONTypeAdapters_24_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_24, init)
}

GSONTypeAdapters_24 *create_GSONTypeAdapters_24_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_24, init)
}

@implementation GSONTypeAdapters_25

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_25_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaUtilCurrency *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  return JavaUtilCurrency_getInstanceWithNSString_([((GSONJsonReader *) nil_chk(inArg)) nextString]);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilCurrency *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:[((JavaUtilCurrency *) nil_chk(value)) getCurrencyCode]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCurrency;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaUtilCurrency;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/Currency;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_25 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_25;
}

@end

void GSONTypeAdapters_25_init(GSONTypeAdapters_25 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_25 *new_GSONTypeAdapters_25_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_25, init)
}

GSONTypeAdapters_25 *create_GSONTypeAdapters_25_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_25, init)
}

@implementation GSONTypeAdapters_26

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_26_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken {
  if ([((GSONTypeToken *) nil_chk(typeToken)) getRawType] != JavaSqlTimestamp_class_()) {
    return nil;
  }
  GSONTypeAdapter *dateTypeAdapter = [((GSONGson *) nil_chk(gson)) getAdapterWithIOSClass:JavaUtilDate_class_()];
  return new_GSONTypeAdapters_26_1_initWithGSONTypeAdapter_(dateTypeAdapter);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGSONTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createWithGSONGson:withGSONTypeToken:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "create", "LGSONGson;LGSONTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "LGSONTypeAdapters;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_26 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, -1, -1, -1 };
  return &_GSONTypeAdapters_26;
}

@end

void GSONTypeAdapters_26_init(GSONTypeAdapters_26 *self) {
  NSObject_init(self);
}

GSONTypeAdapters_26 *new_GSONTypeAdapters_26_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_26, init)
}

GSONTypeAdapters_26 *create_GSONTypeAdapters_26_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_26, init)
}

@implementation GSONTypeAdapters_26_1

- (instancetype)initWithGSONTypeAdapter:(GSONTypeAdapter *)capture$0 {
  GSONTypeAdapters_26_1_initWithGSONTypeAdapter_(self, capture$0);
  return self;
}

- (JavaSqlTimestamp *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  JavaUtilDate *date = [((GSONTypeAdapter *) nil_chk(val$dateTypeAdapter_)) readWithGSONJsonReader:inArg];
  return date != nil ? new_JavaSqlTimestamp_initWithLong_([date getTime]) : nil;
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaSqlTimestamp *)value {
  [((GSONTypeAdapter *) nil_chk(val$dateTypeAdapter_)) writeWithGSONJsonWriter:outArg withId:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSqlTimestamp;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithGSONTypeAdapter:);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$dateTypeAdapter_", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaSqlTimestamp;", "Lcom/google/gson/TypeAdapter<Ljava/util/Date;>;", "LGSONTypeAdapters_26;", "createWithGSONGson:withGSONTypeToken:", "Lcom/google/gson/TypeAdapter<Ljava/sql/Timestamp;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_26_1 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 1, 6, -1, 7, 8, -1 };
  return &_GSONTypeAdapters_26_1;
}

@end

void GSONTypeAdapters_26_1_initWithGSONTypeAdapter_(GSONTypeAdapters_26_1 *self, GSONTypeAdapter *capture$0) {
  self->val$dateTypeAdapter_ = capture$0;
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_26_1 *new_GSONTypeAdapters_26_1_initWithGSONTypeAdapter_(GSONTypeAdapter *capture$0) {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_26_1, initWithGSONTypeAdapter_, capture$0)
}

GSONTypeAdapters_26_1 *create_GSONTypeAdapters_26_1_initWithGSONTypeAdapter_(GSONTypeAdapter *capture$0) {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_26_1, initWithGSONTypeAdapter_, capture$0)
}

@implementation GSONTypeAdapters_27

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_27_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaUtilCalendar *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  [inArg beginObject];
  jint year = 0;
  jint month = 0;
  jint dayOfMonth = 0;
  jint hourOfDay = 0;
  jint minute = 0;
  jint second = 0;
  while ([inArg peek] != JreLoadEnum(GSONJsonToken, END_OBJECT)) {
    NSString *name = [inArg nextName];
    jint value = [inArg nextInt];
    if ([((NSString *) nil_chk(GSONTypeAdapters_27_YEAR)) isEqual:name]) {
      year = value;
    }
    else if ([((NSString *) nil_chk(GSONTypeAdapters_27_MONTH)) isEqual:name]) {
      month = value;
    }
    else if ([((NSString *) nil_chk(GSONTypeAdapters_27_DAY_OF_MONTH)) isEqual:name]) {
      dayOfMonth = value;
    }
    else if ([((NSString *) nil_chk(GSONTypeAdapters_27_HOUR_OF_DAY)) isEqual:name]) {
      hourOfDay = value;
    }
    else if ([((NSString *) nil_chk(GSONTypeAdapters_27_MINUTE)) isEqual:name]) {
      minute = value;
    }
    else if ([((NSString *) nil_chk(GSONTypeAdapters_27_SECOND)) isEqual:name]) {
      second = value;
    }
  }
  [inArg endObject];
  return new_JavaUtilGregorianCalendar_initWithInt_withInt_withInt_withInt_withInt_withInt_(year, month, dayOfMonth, hourOfDay, minute, second);
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilCalendar *)value {
  if (value == nil) {
    (void) [((GSONJsonWriter *) nil_chk(outArg)) nullValue];
    return;
  }
  (void) [((GSONJsonWriter *) nil_chk(outArg)) beginObject];
  (void) [outArg nameWithNSString:GSONTypeAdapters_27_YEAR];
  (void) [outArg valueWithLong:[value getWithInt:JavaUtilCalendar_YEAR]];
  (void) [outArg nameWithNSString:GSONTypeAdapters_27_MONTH];
  (void) [outArg valueWithLong:[value getWithInt:JavaUtilCalendar_MONTH]];
  (void) [outArg nameWithNSString:GSONTypeAdapters_27_DAY_OF_MONTH];
  (void) [outArg valueWithLong:[value getWithInt:JavaUtilCalendar_DAY_OF_MONTH]];
  (void) [outArg nameWithNSString:GSONTypeAdapters_27_HOUR_OF_DAY];
  (void) [outArg valueWithLong:[value getWithInt:JavaUtilCalendar_HOUR_OF_DAY]];
  (void) [outArg nameWithNSString:GSONTypeAdapters_27_MINUTE];
  (void) [outArg valueWithLong:[value getWithInt:JavaUtilCalendar_MINUTE]];
  (void) [outArg nameWithNSString:GSONTypeAdapters_27_SECOND];
  (void) [outArg valueWithLong:[value getWithInt:JavaUtilCalendar_SECOND]];
  (void) [outArg endObject];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCalendar;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "YEAR", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "MONTH", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "DAY_OF_MONTH", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "HOUR_OF_DAY", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "MINUTE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "SECOND", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
  };
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaUtilCalendar;", &GSONTypeAdapters_27_YEAR, &GSONTypeAdapters_27_MONTH, &GSONTypeAdapters_27_DAY_OF_MONTH, &GSONTypeAdapters_27_HOUR_OF_DAY, &GSONTypeAdapters_27_MINUTE, &GSONTypeAdapters_27_SECOND, "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/Calendar;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_27 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 6, 11, -1, -1, 12, -1 };
  return &_GSONTypeAdapters_27;
}

@end

void GSONTypeAdapters_27_init(GSONTypeAdapters_27 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_27 *new_GSONTypeAdapters_27_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_27, init)
}

GSONTypeAdapters_27 *create_GSONTypeAdapters_27_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_27, init)
}

@implementation GSONTypeAdapters_28

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_28_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaUtilLocale *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  NSString *locale = [inArg nextString];
  JavaUtilStringTokenizer *tokenizer = new_JavaUtilStringTokenizer_initWithNSString_withNSString_(locale, @"_");
  NSString *language = nil;
  NSString *country = nil;
  NSString *variant = nil;
  if ([tokenizer hasMoreElements]) {
    language = [tokenizer nextToken];
  }
  if ([tokenizer hasMoreElements]) {
    country = [tokenizer nextToken];
  }
  if ([tokenizer hasMoreElements]) {
    variant = [tokenizer nextToken];
  }
  if (country == nil && variant == nil) {
    return new_JavaUtilLocale_initWithNSString_(language);
  }
  else if (variant == nil) {
    return new_JavaUtilLocale_initWithNSString_withNSString_(language, country);
  }
  else {
    return new_JavaUtilLocale_initWithNSString_withNSString_withNSString_(language, country, variant);
  }
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilLocale *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilLocale;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LJavaUtilLocale;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Ljava/util/Locale;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_28 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_28;
}

@end

void GSONTypeAdapters_28_init(GSONTypeAdapters_28 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_28 *new_GSONTypeAdapters_28_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_28, init)
}

GSONTypeAdapters_28 *create_GSONTypeAdapters_28_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_28, init)
}

@implementation GSONTypeAdapters_29

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_29_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (GSONJsonElement *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  {
    NSString *number;
    GSONJsonArray *array;
    GSONJsonObject *object;
    switch ([[((GSONJsonReader *) nil_chk(inArg)) peek] ordinal]) {
      case GSONJsonToken_Enum_STRING:
      return new_GSONJsonPrimitive_initWithNSString_([inArg nextString]);
      case GSONJsonToken_Enum_NUMBER:
      number = [inArg nextString];
      return new_GSONJsonPrimitive_initWithNSNumber_(new_GSONLazilyParsedNumber_initWithNSString_(number));
      case GSONJsonToken_Enum_BOOLEAN:
      return new_GSONJsonPrimitive_initWithJavaLangBoolean_(JavaLangBoolean_valueOfWithBoolean_([inArg nextBoolean]));
      case GSONJsonToken_Enum_NULL:
      [inArg nextNull];
      return JreLoadStatic(GSONJsonNull, INSTANCE);
      case GSONJsonToken_Enum_BEGIN_ARRAY:
      array = new_GSONJsonArray_init();
      [inArg beginArray];
      while ([inArg hasNext]) {
        [array addWithGSONJsonElement:[self readWithGSONJsonReader:inArg]];
      }
      [inArg endArray];
      return array;
      case GSONJsonToken_Enum_BEGIN_OBJECT:
      object = new_GSONJsonObject_init();
      [inArg beginObject];
      while ([inArg hasNext]) {
        [object addWithNSString:[inArg nextName] withGSONJsonElement:[self readWithGSONJsonReader:inArg]];
      }
      [inArg endObject];
      return object;
      case GSONJsonToken_Enum_END_DOCUMENT:
      case GSONJsonToken_Enum_NAME:
      case GSONJsonToken_Enum_END_OBJECT:
      case GSONJsonToken_Enum_END_ARRAY:
      default:
      @throw new_JavaLangIllegalArgumentException_init();
    }
  }
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(GSONJsonElement *)value {
  if (value == nil || [value isJsonNull]) {
    (void) [((GSONJsonWriter *) nil_chk(outArg)) nullValue];
  }
  else if ([value isJsonPrimitive]) {
    GSONJsonPrimitive *primitive = [value getAsJsonPrimitive];
    if ([((GSONJsonPrimitive *) nil_chk(primitive)) isNumber]) {
      (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSNumber:[primitive getAsNumber]];
    }
    else if ([primitive isBoolean]) {
      (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithBoolean:[primitive getAsBoolean]];
    }
    else {
      (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:[primitive getAsString]];
    }
  }
  else if ([value isJsonArray]) {
    (void) [((GSONJsonWriter *) nil_chk(outArg)) beginArray];
    for (GSONJsonElement * __strong e in nil_chk([value getAsJsonArray])) {
      [self writeWithGSONJsonWriter:outArg withId:e];
    }
    (void) [outArg endArray];
  }
  else if ([value isJsonObject]) {
    (void) [((GSONJsonWriter *) nil_chk(outArg)) beginObject];
    for (id<JavaUtilMap_Entry> __strong e in nil_chk([((GSONJsonObject *) nil_chk([value getAsJsonObject])) entrySet])) {
      (void) [outArg nameWithNSString:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]];
      [self writeWithGSONJsonWriter:outArg withId:[e getValue]];
    }
    (void) [outArg endObject];
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Couldn't write ", [value java_getClass]));
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGSONJsonElement;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LGSONJsonReader;", "LJavaIoIOException;", "write", "LGSONJsonWriter;LGSONJsonElement;", "LGSONTypeAdapters;", "Lcom/google/gson/TypeAdapter<Lcom/google/gson/JsonElement;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_29 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_GSONTypeAdapters_29;
}

@end

void GSONTypeAdapters_29_init(GSONTypeAdapters_29 *self) {
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_29 *new_GSONTypeAdapters_29_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_29, init)
}

GSONTypeAdapters_29 *create_GSONTypeAdapters_29_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_29, init)
}

@implementation GSONTypeAdapters_EnumTypeAdapter

- (instancetype)initWithIOSClass:(IOSClass *)classOfT {
  GSONTypeAdapters_EnumTypeAdapter_initWithIOSClass_(self, classOfT);
  return self;
}

- (JavaLangEnum *)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  if ([((GSONJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(GSONJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return [((id<JavaUtilMap>) nil_chk(nameToConstant_)) getWithId:[inArg nextString]];
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaLangEnum *)value {
  (void) [((GSONJsonWriter *) nil_chk(outArg)) valueWithNSString:value == nil ? nil : [((id<JavaUtilMap>) nil_chk(constantToName_)) getWithId:value]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaLangEnum;", 0x1, 2, 3, 4, 5, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 4, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(readWithGSONJsonReader:);
  methods[2].selector = @selector(writeWithGSONJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "nameToConstant_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
    { "constantToName_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<TT;>;)V", "read", "LGSONJsonReader;", "LJavaIoIOException;", "(Lcom/google/gson/stream/JsonReader;)TT;", "write", "LGSONJsonWriter;LJavaLangEnum;", "(Lcom/google/gson/stream/JsonWriter;TT;)V", "Ljava/util/Map<Ljava/lang/String;TT;>;", "Ljava/util/Map<TT;Ljava/lang/String;>;", "LGSONTypeAdapters;", "<T:Ljava/lang/Enum<TT;>;>Lcom/google/gson/TypeAdapter<TT;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_EnumTypeAdapter = { "EnumTypeAdapter", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x1a, 3, 2, 11, -1, -1, 12, -1 };
  return &_GSONTypeAdapters_EnumTypeAdapter;
}

@end

void GSONTypeAdapters_EnumTypeAdapter_initWithIOSClass_(GSONTypeAdapters_EnumTypeAdapter *self, IOSClass *classOfT) {
  GSONTypeAdapter_init(self);
  self->nameToConstant_ = new_JavaUtilHashMap_init();
  self->constantToName_ = new_JavaUtilHashMap_init();
  @try {
    {
      IOSObjectArray *a__ = [((IOSClass *) nil_chk(classOfT)) getEnumConstants];
      JavaLangEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaLangEnum * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaLangEnum *constant = *b__++;
        NSString *name = [((JavaLangEnum *) nil_chk(constant)) name];
        id<GSONSerializedName> annotation = ((id<GSONSerializedName>) [((JavaLangReflectField *) nil_chk([classOfT getField:name])) getAnnotationWithIOSClass:GSONSerializedName_class_()]);
        if (annotation != nil) {
          name = [annotation value];
          {
            IOSObjectArray *a__ = [annotation alternate];
            NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
            NSString * const *e__ = b__ + a__->size_;
            while (b__ < e__) {
              NSString *alternate = *b__++;
              (void) [self->nameToConstant_ putWithId:alternate withId:constant];
            }
          }
        }
        (void) [self->nameToConstant_ putWithId:name withId:constant];
        (void) [self->constantToName_ putWithId:constant withId:name];
      }
    }
  }
  @catch (JavaLangNoSuchFieldException *e) {
    @throw new_JavaLangAssertionError_initWithId_(e);
  }
}

GSONTypeAdapters_EnumTypeAdapter *new_GSONTypeAdapters_EnumTypeAdapter_initWithIOSClass_(IOSClass *classOfT) {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_EnumTypeAdapter, initWithIOSClass_, classOfT)
}

GSONTypeAdapters_EnumTypeAdapter *create_GSONTypeAdapters_EnumTypeAdapter_initWithIOSClass_(IOSClass *classOfT) {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_EnumTypeAdapter, initWithIOSClass_, classOfT)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GSONTypeAdapters_EnumTypeAdapter)

@implementation GSONTypeAdapters_30

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GSONTypeAdapters_30_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken {
  IOSClass *rawType = [((GSONTypeToken *) nil_chk(typeToken)) getRawType];
  if (![JavaLangEnum_class_() isAssignableFrom:rawType] || rawType == JavaLangEnum_class_()) {
    return nil;
  }
  if (![((IOSClass *) nil_chk(rawType)) isEnum]) {
    rawType = [rawType getSuperclass];
  }
  return new_GSONTypeAdapters_EnumTypeAdapter_initWithIOSClass_(rawType);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGSONTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createWithGSONGson:withGSONTypeToken:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "create", "LGSONGson;LGSONTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "LGSONTypeAdapters;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_30 = { "", "com.google.gson.internal.bind", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, -1, -1, -1 };
  return &_GSONTypeAdapters_30;
}

@end

void GSONTypeAdapters_30_init(GSONTypeAdapters_30 *self) {
  NSObject_init(self);
}

GSONTypeAdapters_30 *new_GSONTypeAdapters_30_init() {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_30, init)
}

GSONTypeAdapters_30 *create_GSONTypeAdapters_30_init() {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_30, init)
}

@implementation GSONTypeAdapters_31

- (instancetype)initWithGSONTypeToken:(GSONTypeToken *)capture$0
                  withGSONTypeAdapter:(GSONTypeAdapter *)capture$1 {
  GSONTypeAdapters_31_initWithGSONTypeToken_withGSONTypeAdapter_(self, capture$0, capture$1);
  return self;
}

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken {
  return [((GSONTypeToken *) nil_chk(typeToken)) isEqual:val$type_] ? val$typeAdapter_ : nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGSONTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithGSONTypeToken:withGSONTypeAdapter:);
  methods[1].selector = @selector(createWithGSONGson:withGSONTypeToken:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$type_", "LGSONTypeToken;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "val$typeAdapter_", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "create", "LGSONGson;LGSONTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "Lcom/google/gson/reflect/TypeToken<TTT;>;", "Lcom/google/gson/TypeAdapter<TTT;>;", "LGSONTypeAdapters;", "newFactoryWithGSONTypeToken:withGSONTypeAdapter:" };
  static const J2ObjcClassInfo _GSONTypeAdapters_31 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 2, 2, 5, -1, 6, -1, -1 };
  return &_GSONTypeAdapters_31;
}

@end

void GSONTypeAdapters_31_initWithGSONTypeToken_withGSONTypeAdapter_(GSONTypeAdapters_31 *self, GSONTypeToken *capture$0, GSONTypeAdapter *capture$1) {
  self->val$type_ = capture$0;
  self->val$typeAdapter_ = capture$1;
  NSObject_init(self);
}

GSONTypeAdapters_31 *new_GSONTypeAdapters_31_initWithGSONTypeToken_withGSONTypeAdapter_(GSONTypeToken *capture$0, GSONTypeAdapter *capture$1) {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_31, initWithGSONTypeToken_withGSONTypeAdapter_, capture$0, capture$1)
}

GSONTypeAdapters_31 *create_GSONTypeAdapters_31_initWithGSONTypeToken_withGSONTypeAdapter_(GSONTypeToken *capture$0, GSONTypeAdapter *capture$1) {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_31, initWithGSONTypeToken_withGSONTypeAdapter_, capture$0, capture$1)
}

@implementation GSONTypeAdapters_32

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
             withGSONTypeAdapter:(GSONTypeAdapter *)capture$1 {
  GSONTypeAdapters_32_initWithIOSClass_withGSONTypeAdapter_(self, capture$0, capture$1);
  return self;
}

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken {
  return [((GSONTypeToken *) nil_chk(typeToken)) getRawType] == val$type_ ? val$typeAdapter_ : nil;
}

- (NSString *)description {
  return JreStrcat("$$$@C", @"Factory[type=", [((IOSClass *) nil_chk(val$type_)) getName], @",adapter=", val$typeAdapter_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGSONTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:withGSONTypeAdapter:);
  methods[1].selector = @selector(createWithGSONGson:withGSONTypeToken:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$type_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$typeAdapter_", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "create", "LGSONGson;LGSONTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "toString", "Ljava/lang/Class<TTT;>;", "Lcom/google/gson/TypeAdapter<TTT;>;", "LGSONTypeAdapters;", "newFactoryWithIOSClass:withGSONTypeAdapter:" };
  static const J2ObjcClassInfo _GSONTypeAdapters_32 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 2, 6, -1, 7, -1, -1 };
  return &_GSONTypeAdapters_32;
}

@end

void GSONTypeAdapters_32_initWithIOSClass_withGSONTypeAdapter_(GSONTypeAdapters_32 *self, IOSClass *capture$0, GSONTypeAdapter *capture$1) {
  self->val$type_ = capture$0;
  self->val$typeAdapter_ = capture$1;
  NSObject_init(self);
}

GSONTypeAdapters_32 *new_GSONTypeAdapters_32_initWithIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, GSONTypeAdapter *capture$1) {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_32, initWithIOSClass_withGSONTypeAdapter_, capture$0, capture$1)
}

GSONTypeAdapters_32 *create_GSONTypeAdapters_32_initWithIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, GSONTypeAdapter *capture$1) {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_32, initWithIOSClass_withGSONTypeAdapter_, capture$0, capture$1)
}

@implementation GSONTypeAdapters_33

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
                    withIOSClass:(IOSClass *)capture$1
             withGSONTypeAdapter:(GSONTypeAdapter *)capture$2 {
  GSONTypeAdapters_33_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(self, capture$0, capture$1, capture$2);
  return self;
}

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken {
  IOSClass *rawType = [((GSONTypeToken *) nil_chk(typeToken)) getRawType];
  return (rawType == val$unboxed_ || rawType == val$boxed_) ? val$typeAdapter_ : nil;
}

- (NSString *)description {
  return JreStrcat("$$C$$@C", @"Factory[type=", [((IOSClass *) nil_chk(val$boxed_)) getName], '+', [((IOSClass *) nil_chk(val$unboxed_)) getName], @",adapter=", val$typeAdapter_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGSONTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:withIOSClass:withGSONTypeAdapter:);
  methods[1].selector = @selector(createWithGSONGson:withGSONTypeToken:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$unboxed_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$boxed_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$typeAdapter_", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "create", "LGSONGson;LGSONTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "toString", "Ljava/lang/Class<TTT;>;", "Lcom/google/gson/TypeAdapter<-TTT;>;", "LGSONTypeAdapters;", "newFactoryWithIOSClass:withIOSClass:withGSONTypeAdapter:" };
  static const J2ObjcClassInfo _GSONTypeAdapters_33 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 3, 6, -1, 7, -1, -1 };
  return &_GSONTypeAdapters_33;
}

@end

void GSONTypeAdapters_33_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(GSONTypeAdapters_33 *self, IOSClass *capture$0, IOSClass *capture$1, GSONTypeAdapter *capture$2) {
  self->val$unboxed_ = capture$0;
  self->val$boxed_ = capture$1;
  self->val$typeAdapter_ = capture$2;
  NSObject_init(self);
}

GSONTypeAdapters_33 *new_GSONTypeAdapters_33_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GSONTypeAdapter *capture$2) {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_33, initWithIOSClass_withIOSClass_withGSONTypeAdapter_, capture$0, capture$1, capture$2)
}

GSONTypeAdapters_33 *create_GSONTypeAdapters_33_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GSONTypeAdapter *capture$2) {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_33, initWithIOSClass_withIOSClass_withGSONTypeAdapter_, capture$0, capture$1, capture$2)
}

@implementation GSONTypeAdapters_34

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
                    withIOSClass:(IOSClass *)capture$1
             withGSONTypeAdapter:(GSONTypeAdapter *)capture$2 {
  GSONTypeAdapters_34_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(self, capture$0, capture$1, capture$2);
  return self;
}

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken {
  IOSClass *rawType = [((GSONTypeToken *) nil_chk(typeToken)) getRawType];
  return (rawType == val$base_ || rawType == val$sub_) ? val$typeAdapter_ : nil;
}

- (NSString *)description {
  return JreStrcat("$$C$$@C", @"Factory[type=", [((IOSClass *) nil_chk(val$base_)) getName], '+', [((IOSClass *) nil_chk(val$sub_)) getName], @",adapter=", val$typeAdapter_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGSONTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:withIOSClass:withGSONTypeAdapter:);
  methods[1].selector = @selector(createWithGSONGson:withGSONTypeToken:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$base_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$sub_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$typeAdapter_", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "create", "LGSONGson;LGSONTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "toString", "Ljava/lang/Class<TTT;>;", "Ljava/lang/Class<+TTT;>;", "Lcom/google/gson/TypeAdapter<-TTT;>;", "LGSONTypeAdapters;", "newFactoryForMultipleTypesWithIOSClass:withIOSClass:withGSONTypeAdapter:" };
  static const J2ObjcClassInfo _GSONTypeAdapters_34 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 3, 7, -1, 8, -1, -1 };
  return &_GSONTypeAdapters_34;
}

@end

void GSONTypeAdapters_34_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(GSONTypeAdapters_34 *self, IOSClass *capture$0, IOSClass *capture$1, GSONTypeAdapter *capture$2) {
  self->val$base_ = capture$0;
  self->val$sub_ = capture$1;
  self->val$typeAdapter_ = capture$2;
  NSObject_init(self);
}

GSONTypeAdapters_34 *new_GSONTypeAdapters_34_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GSONTypeAdapter *capture$2) {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_34, initWithIOSClass_withIOSClass_withGSONTypeAdapter_, capture$0, capture$1, capture$2)
}

GSONTypeAdapters_34 *create_GSONTypeAdapters_34_initWithIOSClass_withIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, IOSClass *capture$1, GSONTypeAdapter *capture$2) {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_34, initWithIOSClass_withIOSClass_withGSONTypeAdapter_, capture$0, capture$1, capture$2)
}

@implementation GSONTypeAdapters_35

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
             withGSONTypeAdapter:(GSONTypeAdapter *)capture$1 {
  GSONTypeAdapters_35_initWithIOSClass_withGSONTypeAdapter_(self, capture$0, capture$1);
  return self;
}

- (GSONTypeAdapter *)createWithGSONGson:(GSONGson *)gson
                      withGSONTypeToken:(GSONTypeToken *)typeToken {
  IOSClass *requestedType = [((GSONTypeToken *) nil_chk(typeToken)) getRawType];
  if (![((IOSClass *) nil_chk(val$clazz_)) isAssignableFrom:requestedType]) {
    return nil;
  }
  return new_GSONTypeAdapters_35_1_initWithGSONTypeAdapters_35_withIOSClass_(self, requestedType);
}

- (NSString *)description {
  return JreStrcat("$$$@C", @"Factory[typeHierarchy=", [((IOSClass *) nil_chk(val$clazz_)) getName], @",adapter=", val$typeAdapter_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LGSONTypeAdapter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:withGSONTypeAdapter:);
  methods[1].selector = @selector(createWithGSONGson:withGSONTypeToken:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$clazz_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$typeAdapter_", "LGSONTypeAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "create", "LGSONGson;LGSONTypeToken;", "<T2:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TT2;>;)Lcom/google/gson/TypeAdapter<TT2;>;", "toString", "Ljava/lang/Class<TT1;>;", "Lcom/google/gson/TypeAdapter<TT1;>;", "LGSONTypeAdapters;", "newTypeHierarchyFactoryWithIOSClass:withGSONTypeAdapter:" };
  static const J2ObjcClassInfo _GSONTypeAdapters_35 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 2, 6, -1, 7, -1, -1 };
  return &_GSONTypeAdapters_35;
}

@end

void GSONTypeAdapters_35_initWithIOSClass_withGSONTypeAdapter_(GSONTypeAdapters_35 *self, IOSClass *capture$0, GSONTypeAdapter *capture$1) {
  self->val$clazz_ = capture$0;
  self->val$typeAdapter_ = capture$1;
  NSObject_init(self);
}

GSONTypeAdapters_35 *new_GSONTypeAdapters_35_initWithIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, GSONTypeAdapter *capture$1) {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_35, initWithIOSClass_withGSONTypeAdapter_, capture$0, capture$1)
}

GSONTypeAdapters_35 *create_GSONTypeAdapters_35_initWithIOSClass_withGSONTypeAdapter_(IOSClass *capture$0, GSONTypeAdapter *capture$1) {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_35, initWithIOSClass_withGSONTypeAdapter_, capture$0, capture$1)
}

@implementation GSONTypeAdapters_35_1

- (instancetype)initWithGSONTypeAdapters_35:(GSONTypeAdapters_35 *)outer$
                               withIOSClass:(IOSClass *)capture$0 {
  GSONTypeAdapters_35_1_initWithGSONTypeAdapters_35_withIOSClass_(self, outer$, capture$0);
  return self;
}

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(id)value {
  [((GSONTypeAdapter *) nil_chk(this$0_->val$typeAdapter_)) writeWithGSONJsonWriter:outArg withId:value];
}

- (id)readWithGSONJsonReader:(GSONJsonReader *)inArg {
  id result = [((GSONTypeAdapter *) nil_chk(this$0_->val$typeAdapter_)) readWithGSONJsonReader:inArg];
  if (result != nil && ![((IOSClass *) nil_chk(val$requestedType_)) isInstance:result]) {
    @throw new_GSONJsonSyntaxException_initWithNSString_(JreStrcat("$$$$", @"Expected a ", [((IOSClass *) nil_chk(val$requestedType_)) getName], @" but was ", [[result java_getClass] getName]));
  }
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, 3, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, 2, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithGSONTypeAdapters_35:withIOSClass:);
  methods[1].selector = @selector(writeWithGSONJsonWriter:withId:);
  methods[2].selector = @selector(readWithGSONJsonReader:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LGSONTypeAdapters_35;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$requestedType_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "write", "LGSONJsonWriter;LNSObject;", "LJavaIoIOException;", "(Lcom/google/gson/stream/JsonWriter;TT1;)V", "read", "LGSONJsonReader;", "(Lcom/google/gson/stream/JsonReader;)TT1;", "Ljava/lang/Class<-TT2;>;", "LGSONTypeAdapters_35;", "createWithGSONGson:withGSONTypeToken:", "Lcom/google/gson/TypeAdapter<TT1;>;" };
  static const J2ObjcClassInfo _GSONTypeAdapters_35_1 = { "", "com.google.gson.internal.bind", ptrTable, methods, fields, 7, 0x8018, 3, 2, 8, -1, 9, 10, -1 };
  return &_GSONTypeAdapters_35_1;
}

@end

void GSONTypeAdapters_35_1_initWithGSONTypeAdapters_35_withIOSClass_(GSONTypeAdapters_35_1 *self, GSONTypeAdapters_35 *outer$, IOSClass *capture$0) {
  self->this$0_ = outer$;
  self->val$requestedType_ = capture$0;
  GSONTypeAdapter_init(self);
}

GSONTypeAdapters_35_1 *new_GSONTypeAdapters_35_1_initWithGSONTypeAdapters_35_withIOSClass_(GSONTypeAdapters_35 *outer$, IOSClass *capture$0) {
  J2OBJC_NEW_IMPL(GSONTypeAdapters_35_1, initWithGSONTypeAdapters_35_withIOSClass_, outer$, capture$0)
}

GSONTypeAdapters_35_1 *create_GSONTypeAdapters_35_1_initWithGSONTypeAdapters_35_withIOSClass_(GSONTypeAdapters_35 *outer$, IOSClass *capture$0) {
  J2OBJC_CREATE_IMPL(GSONTypeAdapters_35_1, initWithGSONTypeAdapters_35_withIOSClass_, outer$, capture$0)
}

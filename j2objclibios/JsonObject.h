//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/JsonObject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JsonObject")
#ifdef RESTRICT_JsonObject
#define INCLUDE_ALL_JsonObject 0
#else
#define INCLUDE_ALL_JsonObject 1
#endif
#undef RESTRICT_JsonObject

#if !defined (GSONJsonObject_) && (INCLUDE_ALL_JsonObject || defined(INCLUDE_GSONJsonObject))
#define GSONJsonObject_

#define RESTRICT_JsonElement 1
#define INCLUDE_GSONJsonElement 1
#include "JsonElement.h"

@class GSONJsonArray;
@class GSONJsonPrimitive;
@class JavaLangBoolean;
@class JavaLangCharacter;
@protocol JavaUtilSet;

/*!
 @brief A class representing an object type in Json.An object consists of name-value pairs where names
  are strings, and values are any other type of <code>JsonElement</code>.
 This allows for a creating a
  tree of JsonElements. The member elements of this object are maintained in order they were added.
 @author Inderjeet Singh
 @author Joel Leitch
 */
@interface GSONJsonObject : GSONJsonElement

#pragma mark Public

- (instancetype)init;

/*!
 @brief Adds a member, which is a name-value pair, to self.The name must be a String, but the value
  can be an arbitrary JsonElement, thereby allowing you to build a full tree of JsonElements
  rooted at this node.
 @param property name of the member.
 @param value the member object.
 */
- (void)addWithNSString:(NSString *)property
    withGSONJsonElement:(GSONJsonElement *)value;

/*!
 @brief Convenience method to add a boolean member.The specified value is converted to a
  JsonPrimitive of Boolean.
 @param property name of the member.
 @param value the number value associated with the member.
 */
- (void)addPropertyWithNSString:(NSString *)property
            withJavaLangBoolean:(JavaLangBoolean *)value;

/*!
 @brief Convenience method to add a char member.The specified value is converted to a
  JsonPrimitive of Character.
 @param property name of the member.
 @param value the number value associated with the member.
 */
- (void)addPropertyWithNSString:(NSString *)property
          withJavaLangCharacter:(JavaLangCharacter *)value;

/*!
 @brief Convenience method to add a primitive member.The specified value is converted to a
  JsonPrimitive of Number.
 @param property name of the member.
 @param value the number value associated with the member.
 */
- (void)addPropertyWithNSString:(NSString *)property
                   withNSNumber:(NSNumber *)value;

/*!
 @brief Convenience method to add a primitive member.The specified value is converted to a
  JsonPrimitive of String.
 @param property name of the member.
 @param value the string value associated with the member.
 */
- (void)addPropertyWithNSString:(NSString *)property
                   withNSString:(NSString *)value;

/*!
 @brief Creates a deep copy of this element and all its children
 @since 2.8.2
 */
- (GSONJsonObject *)deepCopy;

/*!
 @brief Returns a set of members of this object.The set is ordered, and the order is in which the
  elements were added.
 @return a set of members of this object.
 */
- (id<JavaUtilSet>)entrySet;

- (jboolean)isEqual:(id)o;

/*!
 @brief Returns the member with the specified name.
 @param memberName name of the member that is being requested.
 @return the member matching the name. Null if no such member exists.
 */
- (GSONJsonElement *)getWithNSString:(NSString *)memberName;

/*!
 @brief Convenience method to get the specified member as a JsonArray.
 @param memberName name of the member being requested.
 @return the JsonArray corresponding to the specified member.
 */
- (GSONJsonArray *)getAsJsonArrayWithNSString:(NSString *)memberName;

/*!
 @brief Convenience method to get the specified member as a JsonObject.
 @param memberName name of the member being requested.
 @return the JsonObject corresponding to the specified member.
 */
- (GSONJsonObject *)getAsJsonObjectWithNSString:(NSString *)memberName;

/*!
 @brief Convenience method to get the specified member as a JsonPrimitive element.
 @param memberName name of the member being requested.
 @return the JsonPrimitive corresponding to the specified member.
 */
- (GSONJsonPrimitive *)getAsJsonPrimitiveWithNSString:(NSString *)memberName;

/*!
 @brief Convenience method to check if a member with the specified name is present in this object.
 @param memberName name of the member that is being checked for presence.
 @return true if there is a member with the specified name, false otherwise.
 */
- (jboolean)hasWithNSString:(NSString *)memberName;

- (NSUInteger)hash;

/*!
 @brief Returns a set of members key values.
 @return a set of member keys as Strings
 @since 2.8.1
 */
- (id<JavaUtilSet>)keySet;

/*!
 @brief Removes the <code>property</code> from this <code>JsonObject</code>.
 @param property name of the member that should be removed.
 @return the <code>JsonElement</code> object that is being removed.
 @since 1.3
 */
- (GSONJsonElement *)removeWithNSString:(NSString *)property;

/*!
 @brief Returns the number of key/value pairs in the object.
 @return the number of key/value pairs in the object.
 */
- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONJsonObject)

FOUNDATION_EXPORT void GSONJsonObject_init(GSONJsonObject *self);

FOUNDATION_EXPORT GSONJsonObject *new_GSONJsonObject_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GSONJsonObject *create_GSONJsonObject_init();

J2OBJC_TYPE_LITERAL_HEADER(GSONJsonObject)

@compatibility_alias ComGoogleGsonJsonObject GSONJsonObject;

#endif

#pragma pop_macro("INCLUDE_ALL_JsonObject")

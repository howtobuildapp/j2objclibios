//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/JsonSyntaxException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JsonSyntaxException")
#ifdef RESTRICT_JsonSyntaxException
#define INCLUDE_ALL_JsonSyntaxException 0
#else
#define INCLUDE_ALL_JsonSyntaxException 1
#endif
#undef RESTRICT_JsonSyntaxException

#if !defined (GSONJsonSyntaxException_) && (INCLUDE_ALL_JsonSyntaxException || defined(INCLUDE_GSONJsonSyntaxException))
#define GSONJsonSyntaxException_

#define RESTRICT_JsonParseException 1
#define INCLUDE_GSONJsonParseException 1
#include "JsonParseException.h"

@class JavaLangThrowable;

/*!
 @brief This exception is raised when Gson attempts to read (or write) a malformed
  JSON element.
 @author Inderjeet Singh
 @author Joel Leitch
 */
@interface GSONJsonSyntaxException : GSONJsonParseException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)msg;

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief Creates exception with the specified cause.Consider using 
 <code>Throwable)</code> instead if you can
  describe what actually happened.
 @param cause root exception that caused this exception to be thrown.
 */
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(GSONJsonSyntaxException)

FOUNDATION_EXPORT void GSONJsonSyntaxException_initWithNSString_(GSONJsonSyntaxException *self, NSString *msg);

FOUNDATION_EXPORT GSONJsonSyntaxException *new_GSONJsonSyntaxException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GSONJsonSyntaxException *create_GSONJsonSyntaxException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void GSONJsonSyntaxException_initWithNSString_withJavaLangThrowable_(GSONJsonSyntaxException *self, NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT GSONJsonSyntaxException *new_GSONJsonSyntaxException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GSONJsonSyntaxException *create_GSONJsonSyntaxException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT void GSONJsonSyntaxException_initWithJavaLangThrowable_(GSONJsonSyntaxException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT GSONJsonSyntaxException *new_GSONJsonSyntaxException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GSONJsonSyntaxException *create_GSONJsonSyntaxException_initWithJavaLangThrowable_(JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(GSONJsonSyntaxException)

@compatibility_alias ComGoogleGsonJsonSyntaxException GSONJsonSyntaxException;

#endif

#pragma pop_macro("INCLUDE_ALL_JsonSyntaxException")

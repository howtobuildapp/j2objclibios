//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/internal/JavaVersion.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaVersion")
#ifdef RESTRICT_JavaVersion
#define INCLUDE_ALL_JavaVersion 0
#else
#define INCLUDE_ALL_JavaVersion 1
#endif
#undef RESTRICT_JavaVersion

#if !defined (GSONJavaVersion_) && (INCLUDE_ALL_JavaVersion || defined(INCLUDE_GSONJavaVersion))
#define GSONJavaVersion_

/*!
 @brief Utility to check the major Java version of the current JVM.
 */
@interface GSONJavaVersion : NSObject

#pragma mark Public

/*!
 @return the major Java version, i.e. '8' for Java 1.8, '9' for Java 9 etc.
 */
+ (jint)getMajorJavaVersion;

/*!
 @return <code>true</code> if the application is running on Java 9 or later; and <code>false</code> otherwise.
 */
+ (jboolean)isJava9OrLater;

#pragma mark Package-Private

+ (jint)getMajorJavaVersionWithNSString:(NSString *)javaVersion;

@end

J2OBJC_STATIC_INIT(GSONJavaVersion)

FOUNDATION_EXPORT jint GSONJavaVersion_getMajorJavaVersionWithNSString_(NSString *javaVersion);

FOUNDATION_EXPORT jint GSONJavaVersion_getMajorJavaVersion();

FOUNDATION_EXPORT jboolean GSONJavaVersion_isJava9OrLater();

J2OBJC_TYPE_LITERAL_HEADER(GSONJavaVersion)

@compatibility_alias ComGoogleGsonInternalJavaVersion GSONJavaVersion;

#endif

#pragma pop_macro("INCLUDE_ALL_JavaVersion")

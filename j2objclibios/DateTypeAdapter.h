//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/internal/bind/DateTypeAdapter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DateTypeAdapter")
#ifdef RESTRICT_DateTypeAdapter
#define INCLUDE_ALL_DateTypeAdapter 0
#else
#define INCLUDE_ALL_DateTypeAdapter 1
#endif
#undef RESTRICT_DateTypeAdapter

#if !defined (GSONDateTypeAdapter_) && (INCLUDE_ALL_DateTypeAdapter || defined(INCLUDE_GSONDateTypeAdapter))
#define GSONDateTypeAdapter_

#define RESTRICT_TypeAdapter 1
#define INCLUDE_GSONTypeAdapter 1
#include "TypeAdapter.h"

@class GSONJsonElement;
@class GSONJsonReader;
@class GSONJsonWriter;
@class JavaIoReader;
@class JavaUtilDate;
@protocol GSONTypeAdapterFactory;

/*!
 @brief Adapter for Date.Although this class appears stateless, it is not.
 DateFormat captures its time zone and locale when it is created, which gives
  this class state. DateFormat isn't thread safe either, so this class has
  to synchronize its read and write methods.
 */
@interface GSONDateTypeAdapter : GSONTypeAdapter

#pragma mark Public

- (instancetype)init;

- (JavaUtilDate *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaUtilDate *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilDate *)fromJsonWithNSString:(NSString *)arg0;

- (JavaUtilDate *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaUtilDate *)value;

@end

J2OBJC_STATIC_INIT(GSONDateTypeAdapter)

inline id<GSONTypeAdapterFactory> GSONDateTypeAdapter_get_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONDateTypeAdapter_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONDateTypeAdapter, FACTORY, id<GSONTypeAdapterFactory>)

FOUNDATION_EXPORT void GSONDateTypeAdapter_init(GSONDateTypeAdapter *self);

FOUNDATION_EXPORT GSONDateTypeAdapter *new_GSONDateTypeAdapter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GSONDateTypeAdapter *create_GSONDateTypeAdapter_init();

J2OBJC_TYPE_LITERAL_HEADER(GSONDateTypeAdapter)

@compatibility_alias ComGoogleGsonInternalBindDateTypeAdapter GSONDateTypeAdapter;

#endif

#pragma pop_macro("INCLUDE_ALL_DateTypeAdapter")

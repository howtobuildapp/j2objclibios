//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/zhangwen/Documents/zwdir/sync/workspace/howtobuildapp/j2objclibios/javasrc/com/google/gson/internal/bind/TimeTypeAdapter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_TimeTypeAdapter")
#ifdef RESTRICT_TimeTypeAdapter
#define INCLUDE_ALL_TimeTypeAdapter 0
#else
#define INCLUDE_ALL_TimeTypeAdapter 1
#endif
#undef RESTRICT_TimeTypeAdapter

#if !defined (GSONTimeTypeAdapter_) && (INCLUDE_ALL_TimeTypeAdapter || defined(INCLUDE_GSONTimeTypeAdapter))
#define GSONTimeTypeAdapter_

#define RESTRICT_TypeAdapter 1
#define INCLUDE_GSONTypeAdapter 1
#include "TypeAdapter.h"

@class GSONJsonElement;
@class GSONJsonReader;
@class GSONJsonWriter;
@class JavaIoReader;
@class JavaSqlTime;
@protocol GSONTypeAdapterFactory;

/*!
 @brief Adapter for Time.Although this class appears stateless, it is not.
 DateFormat captures its time zone and locale when it is created, which gives
  this class state. DateFormat isn't thread safe either, so this class has
  to synchronize its read and write methods.
 */
@interface GSONTimeTypeAdapter : GSONTypeAdapter

#pragma mark Public

- (instancetype)init;

- (JavaSqlTime *)fromJsonTreeWithGSONJsonElement:(GSONJsonElement *)arg0;

- (JavaSqlTime *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaSqlTime *)fromJsonWithNSString:(NSString *)arg0;

- (JavaSqlTime *)readWithGSONJsonReader:(GSONJsonReader *)inArg;

- (void)writeWithGSONJsonWriter:(GSONJsonWriter *)outArg
                         withId:(JavaSqlTime *)value;

@end

J2OBJC_STATIC_INIT(GSONTimeTypeAdapter)

inline id<GSONTypeAdapterFactory> GSONTimeTypeAdapter_get_FACTORY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GSONTypeAdapterFactory> GSONTimeTypeAdapter_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GSONTimeTypeAdapter, FACTORY, id<GSONTypeAdapterFactory>)

FOUNDATION_EXPORT void GSONTimeTypeAdapter_init(GSONTimeTypeAdapter *self);

FOUNDATION_EXPORT GSONTimeTypeAdapter *new_GSONTimeTypeAdapter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GSONTimeTypeAdapter *create_GSONTimeTypeAdapter_init();

J2OBJC_TYPE_LITERAL_HEADER(GSONTimeTypeAdapter)

@compatibility_alias ComGoogleGsonInternalBindTimeTypeAdapter GSONTimeTypeAdapter;

#endif

#pragma pop_macro("INCLUDE_ALL_TimeTypeAdapter")
